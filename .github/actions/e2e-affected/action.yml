name: E2E Affected Check
description: 'Check if e2e tests are affected by the changes since the last visual snapshot'
inputs:
  project:
    description: 'The name of the project'
    required: true
  base:
    description: 'The base commit to compare against'
    required: true
  head:
    description: 'The head commit to compare with'
    required: true
  percy-token:
    description: 'The Percy API token'
    required: true
  allow-deleted-screenshots:
    description: 'Whether to allow deleted screenshots'
    required: false
    default: 'false'
outputs:
  affected:
    description: 'Whether the e2e tests are affected by the changes'
    value: ${{ steps.affected.outputs.affected }}
  percy_target_commit:
    description: 'The target commit to use as the base for Percy'
    value: ${{ steps.affected.outputs.percy_target_commit }}
runs:
  using: 'composite'
  steps:
    - name: Check if e2e tests are affected by the changes
      id: affected
      uses: actions/github-script@v7
      with:
        script: |
          const options = {
            method: 'GET',
            headers: {
              Authorization: 'Token ${{ inputs.percy-token }}'
            }
          };

          // Find commits that ran through the e2e workflow on the PR branch.
          const prBranchCommitsBuilt = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'e2e.yml',
            branch: '${{ inputs.head }}',
            status: 'completed',
          }).then(({data}) => {
            return data.workflow_runs.map(run => run.head_sha);
          });

          // Getting 500 commits to the base branch, looking for one where this e2e test was affected and run.
          const targetBranchCommits = await exec.getExecOutput('git', ['log', '--format=%H', '-500', '${{ inputs.base }}'])
            .then(({stdout}) => stdout.trim().split('\n'));

          const { getLastGoodPercyBuild, getPercyTargetCommit } = require('./dist/libs/sdk/e2e-schematics/src/workflow');
          const targetCommit = await getPercyTargetCommit(
            'skyux-${{ inputs.project }}',
            targetBranchCommits,
            core,
            (url) => fetch(url, options)
          );
          core.setOutput('percy_target_commit', targetCommit);
          const lastGoodCommit = await getLastGoodPercyBuild(
            'skyux-${{ inputs.project }}',
            prBranchCommitsBuilt,
            '${{ inputs.allow-deleted-screenshots }}' !== 'false',
            core,
            (url) => fetch(url, options)
          );

          if (!lastGoodCommit) {
            core.info('No good Percy test found, running e2e tests');
            core.setOutput('affected', 'true');
            process.exit(0);
          }

          const affectedProjects = await exec.getExecOutput('npx', [
            'nx',
            'show',
            'projects',
            `--base=${lastGoodCommit}`,
            '--head=${{ inputs.head }}',
            '--withTarget=e2e',
            '--affected',
            '--json'
          ]).then(({stdout}) => JSON.parse(stdout));
          const projectAffected = affectedProjects.includes('${{ inputs.project }}');
          if (projectAffected) {
            core.info(`E2E tests affected`);
            core.setOutput('affected', 'true');
          } else {
            core.info(`No e2e tests affected since ${lastGoodCommit.substring(0, 7)}`);
            core.setOutput('affected', 'false');
          }
