name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-deps:
    name: Install and cache dependencies
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.setup-node.outputs.node-version }}
      parameters: ${{ steps.parameters.outputs.parameters }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version-file: '.nvmrc'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Set workflow parameters
        id: parameters
        shell: bash
        run: |
          echo -n parameters= >> $GITHUB_OUTPUT
          # if push, run all tests
          if [[ ${{ github.event_name }} == 'push' ]]; then
            npx skyux-dev workflow --all >> $GITHUB_OUTPUT
          else
            npx skyux-dev workflow >> $GITHUB_OUTPUT
          fi
      - name: Show workflow parameters
        run: |
          echo 'Using workflow parameters:'
          echo ''
          echo '${{ steps.parameters.outputs.parameters }}' | jq

  dependency-checks:
    name: Check library dependencies, missing peers, resources, code formatting
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Retrieve node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ needs.install-deps.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: Check library dependencies
        run: npx skyux-dev check-lib-dependencies
        if: ${{ fromJSON(needs.install-deps.outputs.parameters).projects[0] != 'skip' }}
      - name: Check library missing peers
        run: npx skyux-dev check-lib-missing-peers
        if: ${{ fromJSON(needs.install-deps.outputs.parameters).projects[0] != 'skip' }}
      - name: Check library resources
        run: npx skyux-dev check-lib-resources
        if: ${{ fromJSON(needs.install-deps.outputs.parameters).projects[0] != 'skip' }}
      - name: Check code formatting
        run: npx prettier --check .

  lint-build-test:
    name: Lint, build, test
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      # If one build fails, do not cancel other builds.
      fail-fast: false
      matrix:
        project: ${{ fromJSON(needs.install-deps.outputs.parameters).projects }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
        if: ${{ matrix.project != 'skip' }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
        if: ${{ matrix.project != 'skip' }}
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
        if: ${{ matrix.project != 'skip' }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        if: ${{ matrix.project != 'skip' }}
      - name: Retrieve node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ needs.install-deps.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
        if: ${{ matrix.project != 'skip' }}
      - name: Run NGCC
        run: npx ngcc
        if: ${{ matrix.project != 'skip' }}
      - name: Run lint, build, test
        run: |
          npx nx run-many \
            --targets=lint,build,test,posttest \
            --projects="${{ matrix.project }}" \
            --configuration ci \
            --output-style=static
        if: ${{ matrix.project != 'skip' }}
      - name: Skip
        run: |
          echo 'No projects to run. This is a placeholder step so the workflow completes.'
        if: ${{ matrix.project == 'skip' }}

  build-dist:
    name: Build packages distribution
    needs: install-deps
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Retrieve node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ needs.install-deps.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: Build packages dist
        run: npx skyux-dev create-packages-dist
