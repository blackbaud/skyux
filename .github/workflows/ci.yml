name: CI

on:
  push:
    branches:
      - 7.x.x-alpha
  pull_request:

env:
  BROWSER_STACK_USERNAME: ${{ secrets.BROWSER_STACK_USERNAME }}
  BROWSER_STACK_ACCESS_KEY: ${{ secrets.BROWSER_STACK_ACCESS_KEY }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  install-deps:
    name: Install and cache dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Start Nx Cloud CI run
        run: npx nx-cloud start-ci-run

  agents:
    name: Bootup Nx Cloud agent
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      # Since we're running multiple builds in parallel, we need to pre-process our node_modules before starting the builds.
      - name: Run NGCC
        run: npx ngcc
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  lint:
    name: Lint
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - name: Retrieve node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Check library dependencies
        run: npx skyux-dev check-lib-dependencies
      - name: Check library missing peers
        run: npx skyux-dev check-lib-missing-peers
      - name: Check library resources
        run: npx skyux-dev check-lib-resources
      - name: Check code formatting
        run: npx prettier --check .
      - name: Run lint
        run: npx nx affected:lint --quiet --silent --parallel --maxParallel=5

  build:
    name: Build
    needs: install-deps
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - name: Retrieve node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Build
        run: npx nx affected --target=build --parallel=5

  build-dist:
    name: Build packages distribution
    needs: install-deps
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Retrieve node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Build packages dist
        run: npx skyux-dev create-packages-dist

  coverage:
    name: Code coverage
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - name: Retrieve node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Code coverage
        run: |
          npx nx affected --target=test --parallel=3 --browsers=ChromeHeadless --exclude=e2e-schematics
          npx nx affected --target=posttest --parallel=3 --browsers=ChromeHeadless --exclude=i18n

  stop-agents:
    name: Stop Nx Cloud agents
    runs-on: ubuntu-latest
    if: always()
    needs: [lint, build, build-dist, coverage]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Retrieve node_modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Stop Nx Cloud agents
        run: npx nx-cloud stop-all-agents
