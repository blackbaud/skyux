name: Code Examples

on:
  pull_request:
    paths:
      - '.github/workflows/code-examples.yml'
      - 'apps/code-examples/src/app/code-examples/**'
      - 'libs/sdk/code-examples-sdk/**'
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  list-code-examples:
    name: Code Example Updates
    runs-on: ubuntu-latest
    outputs:
      code-examples: ${{ steps.list-code-examples.outputs.code-examples }}
      lts-branch: ${{ steps.get-lts-branch.outputs.lts-branch }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version-file: '.nvmrc'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Get LTS branch
        id: get-lts-branch
        uses: actions/github-script@v6
        with:
          script: |
            const version = require('./package.json').version;
            const major = version.split('.')[0];
            const ltsBranch = `${major}.x.x`;
            core.setOutput('lts-branch', ltsBranch);
            console.info(`LTS branch: ${ltsBranch}`);
      - name: List code examples
        id: list-code-examples
        run: |
          set -eo pipefail
          WORKFLOW=$(npx ts-node libs/sdk/code-examples-sdk/src/workflow.ts)
          echo "Workflow:"
          echo $WORKFLOW | jq .
          echo "code-examples=${WORKFLOW}" >> $GITHUB_OUTPUT

  update:
    name: Update ${{ matrix.index }}
    runs-on: ubuntu-latest
    needs: list-code-examples
    strategy:
      # If one build fails, do not cancel other builds.
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.list-code-examples.outputs.code-examples) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: pnpm setup
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Update
        env:
          EXAMPLE_PATHS: '${{ matrix.paths }}'
        run: |
          set -eo pipefail
          echo "::group::üèóÔ∏è Generate scaffolding"
          npx nx g @skyux-sdk/code-examples:build \
            --paths "${EXAMPLE_PATHS}" \
            --ltsBranch "${{ needs.list-code-examples.outputs.lts-branch }}" \
            --no-interactive
          echo "::endgroup::"
          echo "::group::üîí Generate lock files"
          echo bash ./dist/libs/sdk/code-examples-sdk/generate-lock-files.sh
          bash ./dist/libs/sdk/code-examples-sdk/generate-lock-files.sh
          echo "::endgroup::"
          echo "::group::üõ†Ô∏è Build and test code examples"
          echo bash ./dist/libs/sdk/code-examples-sdk/build-test.sh
          bash ./dist/libs/sdk/code-examples-sdk/build-test.sh
          echo "::endgroup::"
          echo "::group::üî¨ Verify that code examples load without errors"
          echo npx cypress install
          npx cypress install
          echo bash ./dist/libs/sdk/code-examples-sdk/e2e.sh
          bash ./dist/libs/sdk/code-examples-sdk/e2e.sh
          echo "::endgroup::"
          echo "::group::üßπ Clean ignored files"
          echo bash ./dist/libs/sdk/code-examples-sdk/clean-ignored-files.sh
          bash ./dist/libs/sdk/code-examples-sdk/clean-ignored-files.sh
          echo "::endgroup::"
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'code-example-${{ matrix.index }}'
          path: dist/libs/sdk/code-examples-sdk/for-github
          retention-days: 1

  publish:
    name: Publish
    needs: [list-code-examples, update]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: blackbaud/skyux-code-examples
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - name: Switch to LTS branch
        run: |
          git checkout \
            -B ${{ needs.list-code-examples.outputs.lts-branch }} \
            $(git show-ref -s origin/${{ needs.list-code-examples.outputs.lts-branch }})
      - name: Clear existing code examples
        run: git rm -rf .
      - name: Download code examples
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.temp }}/code-examples
      - name: Stage code examples
        run: |
          set -eo pipefail
          for dir in ${{ github.temp }}/code-examples/code-example-*; do
            if [ -d "$dir" ]; then
              rsync -a "${dir}/" .
            fi
          done
          git add -A .
      - name: Commit code examples
        if: github.event_name == 'release'
        run: |
          git config user.name 'Blackbaud Sky Build User'
          git config user.email 'sky-build-user@blackbaud.com'
          git add -A .
          git commit -m "chore: update code examples for skyux v${{ github.event.release.tag_name }}"
          git push origin ${{ needs.list-code-examples.outputs.lts-branch }}
      - name: Save artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: skyux-code-examples
          path: .
          retention-days: 10
