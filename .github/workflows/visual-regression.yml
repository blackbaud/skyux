name: Visual regression tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  PERCY_BROWSER_EXECUTABLE: /usr/local/share/chrome_driver
  PUPPETEER_EXECUTABLE_PATH: /usr/local/share/chrome_driver
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
  SB_CHROMIUM_PATH: /usr/local/share/chrome_driver

jobs:
  install-deps:
    name: Install and cache dependencies
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.setup-node.outputs.node-version }}
      parameters: ${{ steps.affected-projects.outputs.parameters }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version-file: '.nvmrc'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: e2e-${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Get affected projects
        id: affected-projects
        run: echo "parameters=$(npx skyux-dev e2e-workflow)" >> $GITHUB_OUTPUT

  e2e:
    name: Visual regression tests
    needs: install-deps
    runs-on: ubuntu-latest
    strategy:
      # If one build fails, do not cancel other builds.
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.install-deps.outputs.parameters).e2eMap }}
    steps:
      - uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      # Rebase must happen before installing dependencies.
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Retrieve node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ needs.install-deps.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: Run NGCC
        run: npx ngcc
      - name: Percy ${{ matrix.project }}
        # Timing setting recommended by https://docs.percy.io/docs/cypress#missing-assets
        run: npx percy exec -t 350 -- nx e2e ${{ matrix.project }}-e2e --skip-nx-cache
        env:
          PERCY_TOKEN: ${{ secrets[matrix.token] }}
