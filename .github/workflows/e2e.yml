name: E2E

on:
  push:
    branches:
      - main
  pull_request:

env:
  GH_PAGES_OWNER: blackbaud
  PERCY_BROWSER_EXECUTABLE: C:\Program Files\Google\Chrome\Application\chrome.exe
  PUPPETEER_EXECUTABLE_PATH: C:\Program Files\Google\Chrome\Application\chrome.exe
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
  SB_CHROMIUM_PATH: C:\Program Files\Google\Chrome\Application\chrome.exe

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-deps:
    name: Install and cache dependencies
    runs-on: windows-latest
    outputs:
      parameters: ${{ steps.parameters.outputs.parameters }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'npm'
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            !node_modules\.cache\nx
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: cache-pr-preview-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v3
      - name: Set workflow parameters
        id: parameters
        # https://github.com/actions/github-script
        uses: actions/github-script@v6
        with:
          # Uses https://github.com/actions/toolkit
          script: |
            const parameters = [];
            await exec.exec(
              'npx',
              [
                'skyux-dev',
                'e2e-workflow'
              ],
              {
                listeners: {
                  stdout: (data) => parameters.push(data.toString())
                }
              }
            );
            core.setOutput('parameters', parameters.join(''));
      - name: Show workflow parameters
        run: |
          echo 'Using workflow parameters:'
          echo ''
          echo '${{ steps.parameters.outputs.parameters }}' | jq

  build-storybook:
    name: Build Project Storybook
    runs-on: windows-latest
    needs: install-deps
    strategy:
      # If one build fails, do not cancel other builds.
      fail-fast: false
      matrix:
        project: ${{ fromJSON(needs.install-deps.outputs.parameters).projects }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: ${{ matrix.project != 'skip' }}
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
        if: ${{ matrix.project != 'skip' }}
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
        if: ${{ matrix.project != 'skip' }}
      - name: Retrieve dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            !node_modules\.cache\nx
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: cache-pr-preview-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        if: ${{ matrix.project != 'skip' }}
      - name: Build ${{ matrix.project }}
        # https://github.com/actions/github-script
        uses: actions/github-script@v6
        with:
          # Uses https://github.com/actions/toolkit
          script: |
            await exec.exec('npx nx run', ['${{ matrix.project }}:build-storybook:ci']);
            await exec.exec('npx sb extract', ['./dist/storybook/${{ matrix.project }}']);
        if: ${{ matrix.project != 'skip' }}
      - name: Upload storybook artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}
          path: ./dist/storybook/${{ matrix.project }}
          retention-days: 1
          if-no-files-found: error
        if: ${{ matrix.project != 'skip' }}
      - name: Skip
        run: |
          echo 'No storybook to build'
        if: ${{ matrix.project == 'skip' }}

  build-apps:
    name: Build Apps
    runs-on: windows-latest
    needs: install-deps
    strategy:
      # If one build fails, do not cancel other builds.
      fail-fast: false
      matrix:
        app:
          - code-examples
          - dep-graph
          - integration
          - playground
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: ${{ github.event_name == 'pull_request' }}
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
        if: ${{ github.event_name == 'pull_request' }}
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
        if: ${{ github.event_name == 'pull_request' }}
      - name: Retrieve dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            !node_modules\.cache\nx
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: cache-pr-preview-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        if: ${{ github.event_name == 'pull_request' }}
      - name: Build ${{ matrix.app }}
        run: |
          npx nx build ${{ matrix.app }} --baseHref="https://blackbaud.github.io/skyux-pr-preview/${{ github.event.number }}/${{ matrix.app }}/"
        if: ${{ github.event_name == 'pull_request' && matrix.app != 'dep-graph' }}
      - name: Build ${{ matrix.app }}
        run: npx nx dep-graph --file=dist/apps/dep-graph/index.html
        if: ${{ github.event_name == 'pull_request' && matrix.app == 'dep-graph' }}
      - name: Upload app artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.app }}
          path: ./dist/apps/${{ matrix.app }}
          retention-days: 1
          if-no-files-found: error
        if: ${{ github.event_name == 'pull_request' }}
      - name: Skip
        run: echo "Skip building ${{ matrix.app }} app. Only Storybook is published on branch builds."
        if: ${{ github.event_name != 'pull_request' }}

  publish:
    name: Publish
    runs-on: windows-latest
    needs:
      - install-deps
      - build-storybook
      - build-apps
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Retrieve dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            !node_modules\.cache\nx
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: cache-pr-preview-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./dist/${{ fromJson(needs.install-deps.outputs.parameters).storybooksPath }}
      - name: Move apps
        # All the artifacts are downloaded into one folder, so we need to move them into the correct folders.
        if: ${{ github.event_name == 'pull_request' }}
        # Setting the shell so this step can run as-is on Windows or Linux.
        shell: pwsh
        run: |
          md ./dist/apps -ea 0
          ForEach($app in "code-examples", "integration", "playground", "dep-graph") {
            mv "./dist/${{ fromJson(needs.install-deps.outputs.parameters).storybooksPath }}/$app" "./dist/apps/$app"
          }
      - name: Generate Storybook Composition
        # https://github.com/actions/github-script
        uses: actions/github-script@v6
        with:
          # Uses https://github.com/actions/toolkit
          script: |
            await exec.exec('npx', [
              'nx',
              'g',
              '@skyux-sdk/e2e-schematics:storybook-composition',
              '--projectsJson',
              '${{ fromJson(needs.install-deps.outputs.parameters).projectsJson }}',
              '--baseUrl',
              '../${{ fromJson(needs.install-deps.outputs.parameters).storybooksPath }}'
            ]);
      - name: Build Storybook Composition
        run: npx nx run storybook:build-storybook:ci --outputDir=dist/storybook
      - name: Checkout ${{ fromJson(needs.install-deps.outputs.parameters).ghPagesRepo }}
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GH_PAGES_OWNER }}/${{ fromJson(needs.install-deps.outputs.parameters).ghPagesRepo }}
          ref: 'main'
          fetch-depth: 1
          path: ${{ fromJson(needs.install-deps.outputs.parameters).ghPagesRepo }}
          token: ${{secrets.GH_PERSONAL_ACCESS_TOKEN}}
      - name: Publish preview and comment on PR
        run: |
          npx skyux-dev publish-storybook --workingDirectory=${{ fromJson(needs.install-deps.outputs.parameters).ghPagesRepo }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

  e2e:
    name: End to end tests
    runs-on: windows-latest
    needs: install-deps
    if: ${{ fromJson(needs.install-deps.outputs.parameters).projectsJson != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.install-deps.outputs.parameters).e2eMap }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Rebase current branch
        run: node ./scripts/rebase-pr.js
      - name: Retrieve dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            !node_modules\.cache\nx
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: cache-pr-preview-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - name: Percy ${{ matrix.project }}
        # Timing setting recommended by https://docs.percy.io/docs/cypress#missing-assets
        run: npx percy exec -t 350 -- nx e2e ${{ matrix.project }}-e2e --skip-nx-cache
        env:
          PERCY_TOKEN: ${{ secrets[matrix.token] }}
