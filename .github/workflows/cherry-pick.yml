name: Cherry pick
on:
  pull_request:
    types:
      - closed
    branches:
      - 7.x.x

env:
  target: main
  cherry-pick-branch: cherry-pick-${{ github.event.pull_request.head.ref }}
  from-branch: ${{ github.event.pull_request.base.ref }}

jobs:
  cherry-pick:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.target }}
          fetch-depth: 0
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version-file: '.nvmrc'

      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}

      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cherry pick
        run: |
          # Echo commands to the log.
          set -x

          # Do not exit on error.
          set +e

          # Cherry-pick the merge commit into the target branch, which is checked out.
          git cherry-pick -x ${{ github.event.pull_request.merge_commit_sha }}

          if [ $? -ne 0 ]; then

            # If the cherry-pick failed and it was not against a release branch,
            # do not try to resolve conflicts.
            if [ "${{ github.event.pull_request.labels.*.name }}" != "autorelease ${{ env.from-branch }}: pending" ]; then
              echo "cherrypick=failed" >> $GITHUB_ENV
              exit 0
            fi

            # If the cherry-pick was against a release branch,
            # ignore package.json changes and accept CHANGELOG.md changes.
            git checkout ${{ env.target }} -- package*
            git add CHANGELOG.md

            # Try again, accept the commit message as-is, and check for conflicts.
            git -c core.editor=true cherry-pick --continue

            if [ $? -ne 0 ]; then
              echo "cherrypick=failed" >> $GITHUB_ENV
              exit 0
            fi
          fi

          # Push the cherry-pick to a new cherry-pick branch.
          git push -u origin ${{ env.target }}:${{ env.cherry-pick-branch }}

          if [ $? -ne 0 ]; then
            echo "cherrypick=failed" >> $GITHUB_ENV
            exit 0
          fi

          # Create a pull request for the cherry-pick, using the same title as the original PR.
          gh pr create \
            --title "${{ github.event.pull_request.title }}" \
            --body ":cherries: Cherry picked from #${{ github.event.pull_request.number }} [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})" \
            --base ${{ env.target }} \
            --head ${{ env.cherry-pick-branch }}

          if [ $? -ne 0 ]; then
            echo "cherrypick=failed" >> $GITHUB_ENV
          else
            echo "cherrypick=success" >> $GITHUB_ENV

            # Get the URL of the pull request and add it to the environment.
            echo -n "pr_url=" >> $GITHUB_ENV
            gh pr list --json url --search "head:${{ env.cherry-pick-branch }}" --limit 1 | jq -r '.[0].url' >> $GITHUB_ENV
          fi

      - name: Notify Slack on success
        if: ${{ env.cherrypick == 'success' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ':pr: :cherries: ${{ github.event.pull_request.title }} ${{ env.pr_url }}'
          SLACK_ICON: https://github.com/actions.png?size=48
          SLACK_USERNAME: GitHub Actions
          SLACK_CHANNEL: cor-skyux-private
          SLACK_COLOR: '#8EFA00' # Green

      - name: Notify Slack on failure
        if: ${{ env.cherrypick == 'failed' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Cherry pick failed for ${{ github.event.pull_request.html_url }} :x: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          SLACK_ICON: https://github.com/actions.png?size=48
          SLACK_USERNAME: GitHub Actions
          SLACK_CHANNEL: cor-skyux-private
          SLACK_COLOR: '#FF2600' # Red
