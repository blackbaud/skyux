name: Release Please
on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"deprecation","section":"Deprecations","hidden":false}]'
          release-type: 'node'
          default-branch: '${{ github.ref_name }}'
          package-name: 'skyux'
          pull-request-title-pattern: 'chore: release ${version}'
          labels: 'autorelease ${{ github.ref_name }}: pending'
          release-as: 7.0.0-beta.3
          release-labels: 'autorelease ${{ github.ref_name }}: tagged'
          prerelease: true
          draft-pull-request: true
          include-v-in-tag: false
          token: '${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}'
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: '14'
      # Workaround to avoid "Post Run actions/setup-node" failures.
      # See: https://github.com/actions/setup-node/issues/317
      - name: Ensure cache directory exists
        if: ${{ !steps.release.outputs.release_created }}
        run: mkdir -p /home/runner/.npm
        continue-on-error: true
      - name: Cache node modules
        if: ${{ steps.release.outputs.release_created }}
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: ${{ steps.release.outputs.release_created && steps.cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        run: npx skyux-dev create-packages-dist
      - name: Publish
        if: ${{ steps.release.outputs.release_created }}
        run: npx skyux-dev publish-packages-dist
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Notify Slack
        if: ${{ steps.release.outputs.release_created }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Successfully published SKY UX ${{ steps.release.outputs.tag_name }} to NPM. http://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
          SLACK_ICON: https://github.com/blackbaud.png?size=48
          SLACK_USERNAME: SKY UX
