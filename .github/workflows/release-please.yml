name: Release Please
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"deprecation","section":"Deprecations","hidden":false},{"type":"revert","section":"Reverts","hidden":false}]'
          release-type: 'node'
          default-branch: '${{ github.ref_name }}'
          package-name: 'skyux'
          pull-request-title-pattern: 'chore: release ${version}'
          labels: 'autorelease ${{ github.ref_name }}: pending'
          release-labels: 'autorelease ${{ github.ref_name }}: tagged'
          release-as: '8.0.0-alpha.9'
          prerelease: true
          draft-pull-request: true
          include-v-in-tag: false
          token: '${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}'
      - uses: actions/checkout@v3
        with:
          token: '${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}'
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version-file: '.nvmrc'
      # Workaround to avoid "Post Run actions/setup-node" failures.
      # See: https://github.com/actions/setup-node/issues/317
      - name: Ensure cache directory exists
        if: ${{ !steps.release.outputs.release_created }}
        run: mkdir -p /home/runner/.npm
        continue-on-error: true
      - name: Cache node modules
        if: ${{ steps.release.outputs.release_created }}
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: ${{ steps.release.outputs.release_created && steps.cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        run: npx skyux-dev create-packages-dist
      - name: Publish
        if: ${{ steps.release.outputs.release_created }}
        run: npx skyux-dev publish-packages-dist
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Notify Slack (success)
        if: ${{ steps.release.outputs.release_created }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Successfully published SKY UX ${{ steps.release.outputs.tag_name }} to NPM. http://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
          SLACK_ICON: https://github.com/blackbaud.png?size=48
          SLACK_USERNAME: SKY UX
      - name: Notify Slack (failure)
        if: ${{ failure() && steps.release.outputs.release_created }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Failed to publish SKY UX ${{ steps.release.outputs.tag_name }} to NPM!
          SLACK_ICON: https://github.com/blackbaud.png?size=48
          SLACK_USERNAME: SKY UX
      - name: Bump pre-release version
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name 'Blackbaud Sky Build User'
          git config user.email 'sky-build-user@blackbaud.com'

          # Does the workflow file say prerelease is true?
          if [ "$(yq -r '.jobs.release.steps[0].with.prerelease' .github/workflows/release-please.yml)" = "true" ]; then

            # Log commands and exit on error.
            set -exo pipefail

            # Get the current pre-release version.
            RELEASE_AS=$(yq -r '.jobs.release.steps[0].with.release-as' .github/workflows/release-please.yml)

            # Bump the pre-release version.
            NEXT_VERSION=$(npx semver -i prerelease $RELEASE_AS)

            # If next version is the same as the current version, or if next version is empty, exit.
            if [ "$NEXT_VERSION" = "$RELEASE_AS" ] || [ -z "$NEXT_VERSION" ]; then
              echo "Not able to bump pre-release version."
              exit 0
            fi

            # Update the release-please.yml file.
            yq -i '.jobs.release.steps[0].with.release-as = "'${NEXT_VERSION}'"' .github/workflows/release-please.yml

            # Create a pull request.
            git checkout -b release-as-${NEXT_VERSION}
            git add .github/workflows/release-please.yml
            git commit -m "chore: bump pre-release version to ${NEXT_VERSION}"
            git push origin release-as-${NEXT_VERSION}
            gh pr create \
              --title "chore: bump pre-release version to ${NEXT_VERSION}" \
              --body ":robot: Bumping pre-release version to ${NEXT_VERSION}." \
              --base ${{ github.ref_name }} \
              --head release-as-${NEXT_VERSION}

          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
