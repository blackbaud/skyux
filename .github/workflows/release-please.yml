name: Release Please
on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
env:
  PRERELEASE: 'false'
  MAJOR_VERSION: 8
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Next release
        if: ${{ env.PRERELEASE == 'true' }}
        id: next-release
        run: |
          # Log commands and exit on error.
          set -exo pipefail

          # Get the current prerelease version.
          CURRENT_RELEASE=$(gh release list -R blackbaud/skyux|grep '^v${{ env.MAJOR_VERSION }}'|head -1|cut -d$'\t' -f 3)

          # Bump the prerelease version.
          NEXT_VERSION=$(npx --yes semver -i prerelease $CURRENT_RELEASE)

          # If version is empty, exit.
          if [ -z "$CURRENT_RELEASE" ] || [ -z "$NEXT_VERSION" ]; then
            echo "Not able to determine prerelease version."
            exit 1
          fi

          echo "Next release version: $NEXT_VERSION"
          echo "next-release=$NEXT_VERSION" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"deprecation","section":"Deprecations","hidden":false},{"type":"revert","section":"Reverts","hidden":false}]'
          release-type: 'node'
          default-branch: '${{ github.ref_name }}'
          package-name: 'skyux'
          pull-request-title-pattern: 'chore: release ${version}'
          labels: 'autorelease ${{ github.ref_name }}: pending'
          release-labels: 'autorelease ${{ github.ref_name }}: tagged'
          release-as: '${{ steps.next-release.outputs.next-release }}'
          prerelease: ${{ env.PRERELEASE == 'true' }}
          draft-pull-request: true
          include-v-in-tag: false
          token: '${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}'
      - uses: actions/checkout@v3
        with:
          token: '${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}'
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version-file: '.nvmrc'
      # Workaround to avoid "Post Run actions/setup-node" failures.
      # See: https://github.com/actions/setup-node/issues/317
      - name: Ensure cache directory exists
        if: ${{ !steps.release.outputs.release_created }}
        run: mkdir -p /home/runner/.npm
        continue-on-error: true
      - name: Cache node modules
        if: ${{ steps.release.outputs.release_created }}
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: ${{ steps.release.outputs.release_created && steps.cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        run: npx skyux-dev create-packages-dist
      - name: Publish
        if: ${{ steps.release.outputs.release_created }}
        run: npx skyux-dev publish-packages-dist
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Notify Slack (success)
        if: ${{ steps.release.outputs.release_created }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Successfully published SKY UX ${{ steps.release.outputs.tag_name }} to NPM. http://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md
          SLACK_ICON: https://github.com/blackbaud.png?size=48
          SLACK_USERNAME: SKY UX
      - name: Notify Slack (failure)
        if: ${{ failure() && steps.release.outputs.release_created }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Failed to publish SKY UX ${{ steps.release.outputs.tag_name }} to NPM!
          SLACK_ICON: https://github.com/blackbaud.png?size=48
          SLACK_USERNAME: SKY UX
