// @internal

@use 'responsive' as res;

@mixin sky-component($theme, $selector, $encapsulate: true, $breakpoint: '') {
  @if $breakpoint == '' {
    @include sky-component-theme($theme, $selector, $encapsulate) {
      @content;
    }
  } @else if $breakpoint == 'xs' {
    @include res.sky-host-responsive-container-xs-min($encapsulate) {
      @include sky-component-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  } @else if $breakpoint == 'sm' {
    @include res.sky-host-responsive-container-sm-min($encapsulate) {
      @include sky-component-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  } @else if $breakpoint == 'md' {
    @include res.sky-host-responsive-container-md-min($encapsulate) {
      @include sky-component-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  } @else if $breakpoint == 'lg' {
    @include res.sky-host-responsive-container-lg-min($encapsulate) {
      @include sky-component-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  }
}

@mixin sky-component-theme($theme, $selector, $encapsulate: true) {
  @if $theme == 'modern' {
    @if $encapsulate {
      :host-context(.sky-theme-modern) #{$selector} {
        @content;
      }
    } @else {
      .sky-theme-modern #{$selector} {
        @content;
      }
    }
  } @else {
    #{$selector}:not(.sky-theme-modern *) {
      @content;
    }
  }
}

@mixin sky-component-host(
  $theme,
  $selector: ':host',
  $encapsulate: true,
  $breakpoint: ''
) {
  @if $breakpoint == '' {
    @include sky-component-host-theme($theme, $selector, $encapsulate) {
      @content;
    }
  } @else if $breakpoint == 'xs' {
    @include res.sky-host-responsive-container-xs-min($encapsulate) {
      @include sky-component-host-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  } @else if $breakpoint == 'sm' {
    @include res.sky-host-responsive-container-sm-min($encapsulate) {
      @include sky-component-host-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  } @else if $breakpoint == 'md' {
    @include res.sky-host-responsive-container-md-min($encapsulate) {
      @include sky-component-host-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  } @else if $breakpoint == 'lg' {
    @include res.sky-host-responsive-container-lg-min($encapsulate) {
      @include sky-component-host-theme($theme, $selector, $encapsulate) {
        @content;
      }
    }
  }
}

@mixin sky-component-host-theme(
  $theme,
  $selector: ':host',
  $encapsulate: true
) {
  @if $theme == 'default' {
    #{$selector}.sky-cmp-theme-default {
      @content;
    }
  } @else {
    @if $encapsulate {
      :host-context(.sky-theme-modern) #{$selector}.sky-cmp-theme-modern {
        @content;
      }
    } @else {
      .sky-theme-modern #{$selector}.sky-cmp-theme-modern {
        @content;
      }
    }
  }
}
