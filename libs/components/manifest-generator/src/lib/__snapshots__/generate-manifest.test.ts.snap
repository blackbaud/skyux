// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generate-manifest > should generate manifest 1`] = `
[MockFunction spy] {
  "calls": [
    [
      "/dist/public-api.json",
      "{
  "packages": {
    "@skyux/code-examples": [
      {
        "anchorId": "class_foo-code-example1",
        "docsId": "FooCodeExample1",
        "extraTags": {
          "title": "This is a title"
        },
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/code-examples/src/lib/types.ts",
        "kind": "component",
        "name": "FooCodeExample1",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/code-examples/src/lib/types.ts#L9",
        "selector": "foo-example-1"
      },
      {
        "anchorId": "class_foo-code-example2",
        "docsId": "FooCodeExample2",
        "extraTags": {
          "title": "This code example hides its demo.",
          "docsDemoHidden": ""
        },
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/code-examples/src/lib/types.ts",
        "kind": "component",
        "name": "FooCodeExample2",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/code-examples/src/lib/types.ts#L18",
        "selector": "foo-example-2"
      }
    ],
    "@skyux/foo": [
      {
        "anchorId": "class_----",
        "description": "This describes a class with a name not including letters or numbers.",
        "docsId": "____",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/anchor-id.ts",
        "kind": "class",
        "name": "____",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/anchor-id.ts#L4"
      },
      {
        "anchorId": "class_foo1",
        "description": "This describes a class with a name comprising of letters and numbers.",
        "docsId": "Foo1",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/anchor-id.ts",
        "kind": "class",
        "name": "Foo1",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/anchor-id.ts#L14"
      },
      {
        "anchorId": "class_foo-with-only-letters",
        "description": "This describes a class with a name comprising only of letters.",
        "docsId": "FooWithOnlyLetters",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/anchor-id.ts",
        "kind": "class",
        "name": "FooWithOnlyLetters",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/anchor-id.ts#L9"
      },
      {
        "anchorId": "variable_should-have-code-example-default-language-comment",
        "codeExample": "<h1></h1>",
        "codeExampleLanguage": "markup",
        "docsId": "shouldHaveCodeExampleDefaultLanguageComment",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts",
        "kind": "variable",
        "name": "shouldHaveCodeExampleDefaultLanguageComment",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts#L27",
        "type": "true"
      },
      {
        "anchorId": "variable_should-have-code-example-markup-language-comment",
        "codeExample": "<br />",
        "codeExampleLanguage": "markup",
        "docsId": "shouldHaveCodeExampleMarkupLanguageComment",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts",
        "kind": "variable",
        "name": "shouldHaveCodeExampleMarkupLanguageComment",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts#L35",
        "type": "true"
      },
      {
        "anchorId": "variable_should-have-code-example-unknown-language-comment",
        "codeExample": "const app = express();",
        "codeExampleLanguage": "markup",
        "docsId": "shouldHaveCodeExampleUnknownLanguageComment",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts",
        "kind": "variable",
        "name": "shouldHaveCodeExampleUnknownLanguageComment",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts#L43",
        "type": "true"
      },
      {
        "anchorId": "variable_should-have-deprecated-comment",
        "docsId": "shouldHaveDeprecatedComment",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts",
        "isDeprecated": true,
        "kind": "variable",
        "name": "shouldHaveDeprecatedComment",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts#L4",
        "type": "true"
      },
      {
        "anchorId": "variable_should-have-deprecated-reason-comment",
        "deprecationReason": "Do something else instead",
        "docsId": "shouldHaveDeprecatedReasonComment",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts",
        "isDeprecated": true,
        "kind": "variable",
        "name": "shouldHaveDeprecatedReasonComment",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts#L9",
        "type": "true"
      },
      {
        "anchorId": "variable_should-have-internal-comment",
        "docsId": "shouldHaveInternalComment",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts",
        "isInternal": true,
        "kind": "variable",
        "name": "shouldHaveInternalComment",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts#L19",
        "type": "true"
      },
      {
        "anchorId": "variable_should-have-preview-comment",
        "docsId": "shouldHavePreviewComment",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts",
        "isPreview": true,
        "kind": "variable",
        "name": "shouldHavePreviewComment",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/comments.ts#L14",
        "type": "true"
      },
      {
        "anchorId": "class_foo-base-class",
        "docsId": "FooBaseClass",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts",
        "kind": "class",
        "name": "FooBaseClass",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts#L6"
      },
      {
        "anchorId": "class_foo-basic-type-param-class",
        "children": [
          {
            "kind": "class-property",
            "name": "ref",
            "type": "T"
          },
          {
            "kind": "class-property",
            "name": "refOrUndefined",
            "type": "T | undefined"
          }
        ],
        "docsId": "FooBasicTypeParamClass",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts",
        "kind": "class",
        "name": "FooBasicTypeParamClass",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts#L8",
        "typeParameters": "<T extends unknown>"
      },
      {
        "anchorId": "class_foo-basic-type-param-default-value-class",
        "children": [
          {
            "kind": "class-property",
            "name": "ref",
            "type": "T | undefined"
          }
        ],
        "docsId": "FooBasicTypeParamDefaultValueClass",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts",
        "kind": "class",
        "name": "FooBasicTypeParamDefaultValueClass",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts#L13",
        "typeParameters": "<T = boolean>"
      },
      {
        "anchorId": "class_foo-class",
        "children": [
          {
            "description": "Describes a method which returns a MappedType (e.g. \`{ [K in keyof T]: string }\`).",
            "kind": "class-method",
            "name": "getStrings",
            "parameters": [
              {
                "name": "dictionary",
                "type": "TResource"
              }
            ],
            "type": "Observable<{ [K in string | number | symbol]: string }>",
            "typeParameters": "<TResource extends ResourceDictionary>"
          },
          {
            "description": "Describes a method without any parameters.",
            "kind": "class-method",
            "name": "methodWithoutParameters",
            "type": "void"
          },
          {
            "kind": "class-property",
            "name": "arrayOfFunctionTypes",
            "type": "((a: boolean, b?: string) => void)[]"
          },
          {
            "kind": "class-property",
            "name": "arrayOfFunctionTypesOrUndefined",
            "type": "((a: boolean, b?: string) => void)[] | undefined"
          },
          {
            "kind": "class-property",
            "name": "arrayOfIntrinsicTypes",
            "type": "string[] | undefined"
          },
          {
            "kind": "class-property",
            "name": "arrayOfReflectionTypes",
            "type": "{ a: boolean; b: string }[] | undefined"
          },
          {
            "kind": "class-property",
            "name": "closureType",
            "type": "() => void"
          },
          {
            "kind": "class-property",
            "name": "closureTypeOrUndefined",
            "type": "(() => void) | undefined"
          },
          {
            "description": "Describes an internal property.",
            "isInternal": true,
            "kind": "class-property",
            "name": "internalProperty",
            "type": "string | undefined"
          },
          {
            "kind": "class-property",
            "name": "intrinsicType",
            "type": "string | undefined"
          },
          {
            "kind": "class-property",
            "name": "lambdaRef",
            "type": "λ2"
          },
          {
            "kind": "class-property",
            "name": "literalType",
            "type": "0 | 1 | undefined"
          },
          {
            "kind": "class-property",
            "name": "mapType",
            "type": "Map<string, number> | undefined"
          },
          {
            "kind": "class-property",
            "name": "referenceType",
            "type": "TClass | undefined"
          },
          {
            "kind": "class-property",
            "name": "reflectionIndexSignatureType",
            "type": "{ [key: string]: boolean } | undefined"
          },
          {
            "kind": "class-property",
            "name": "reflectionType",
            "type": "{ a: boolean; b?: string }"
          },
          {
            "kind": "class-property",
            "name": "reflectionTypeOrUndefined",
            "type": "{ a: boolean; b?: string } | undefined"
          },
          {
            "kind": "class-property",
            "name": "unionType",
            "type": "null | true | \\"a\\" | \\"b\\" | undefined"
          },
          {
            "description": "This is a static getter without a setter.",
            "isDeprecated": true,
            "isStatic": true,
            "kind": "class-property",
            "name": "count",
            "type": "number"
          }
        ],
        "description": "This is the foo class.",
        "docsId": "FooClass",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts",
        "kind": "class",
        "name": "FooClass",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts#L24",
        "typeParameters": "<TClass extends FooBaseClass>"
      },
      {
        "anchorId": "class_foo-with-docs-id-override-class",
        "docsId": "docs-id-override",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts",
        "kind": "class",
        "name": "FooWithDocsIdOverrideClass",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts#L131"
      },
      {
        "anchorId": "class_foo-with-extra-tags-class",
        "docsId": "FooWithExtraTagsClass",
        "extraTags": {
          "title": "This is a sample title",
          "foobar": "This is an unrecognized tag"
        },
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts",
        "kind": "class",
        "name": "FooWithExtraTagsClass",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts#L137"
      },
      {
        "anchorId": "class_foo-with-static-properties-class",
        "children": [
          {
            "description": "This describes the abstract method.",
            "kind": "class-method",
            "name": "someAbstractMethod",
            "type": "void"
          },
          {
            "description": "This describes the static method.",
            "isStatic": true,
            "kind": "class-method",
            "name": "someStaticMethod",
            "type": "boolean"
          },
          {
            "description": "This describes the static property.",
            "defaultValue": "false",
            "isStatic": true,
            "kind": "class-property",
            "name": "someStaticProperty",
            "type": "boolean"
          }
        ],
        "description": "This describes the foo abstract class.\\n\\nIt has multiple paragraphs in its description.",
        "docsId": "FooWithStaticPropertiesClass",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts",
        "kind": "class",
        "name": "FooWithStaticPropertiesClass",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.class.ts#L109"
      },
      {
        "anchorId": "class_sky-foo-non-standalone-component",
        "description": "This is a non-standalone component with a Sky prefix.",
        "docsId": "SkyFooNonStandaloneComponent",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.component.ts",
        "kind": "component",
        "name": "SkyFooNonStandaloneComponent",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.component.ts#L84",
        "selector": "sky-foo-non-standalone"
      },
      {
        "anchorId": "class_sky-foo-standalone-component",
        "description": "This is a standalone component with a Sky prefix and an overridden docsId.",
        "docsId": "sky-foo-standalone-override",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.component.ts",
        "kind": "component",
        "name": "SkyFooStandaloneComponent",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.component.ts#L94",
        "selector": "sky-foo-standalone"
      },
      {
        "anchorId": "class_foo-component",
        "children": [
          {
            "description": "This describes the bar input.",
            "defaultValue": "'baz'",
            "kind": "directive-input",
            "name": "bar",
            "type": "string | undefined",
            "isRequired": true
          },
          {
            "description": "This describes the foo input.",
            "kind": "directive-input",
            "name": "foo",
            "type": "InputSignal<undefined | string>"
          },
          {
            "description": "This describes the fooRequired input.",
            "kind": "directive-input",
            "name": "fooRequired",
            "type": "InputSignal<string>"
          },
          {
            "description": "This describes an input signal with a boolean transformer.",
            "kind": "directive-input",
            "name": "fooWithTransformer",
            "type": "InputSignalWithTransform<boolean, unknown>"
          },
          {
            "description": "This describes an input with only a setter.",
            "defaultValue": "false",
            "kind": "directive-input",
            "name": "compact",
            "type": "boolean"
          },
          {
            "description": "This describes the onClick output.",
            "kind": "directive-output",
            "name": "onClick",
            "type": "OutputEmitterRef<void>"
          },
          {
            "description": "This describes the onTouch output.",
            "kind": "directive-output",
            "name": "onTouch",
            "type": "EventEmitter<void>"
          }
        ],
        "docsId": "FooComponent",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.component.ts",
        "kind": "component",
        "name": "FooComponent",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.component.ts#L20",
        "selector": "lib-foo"
      },
      {
        "anchorId": "type-alias_foo-breakpoint",
        "description": "The name of a viewport or container breakpoint.",
        "docsId": "FooBreakpoint",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.const-assertion.ts",
        "kind": "type-alias",
        "name": "FooBreakpoint",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.const-assertion.ts#L10",
        "type": "readonly [\\"xs\\", \\"sm\\", \\"md\\", \\"lg\\"]"
      },
      {
        "anchorId": "variable_foo-breakpoints",
        "description": "A list of all breakpoints.",
        "docsId": "FOO_BREAKPOINTS",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.const-assertion.ts",
        "isInternal": true,
        "kind": "variable",
        "name": "FOO_BREAKPOINTS",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.const-assertion.ts#L5",
        "type": "readonly [\\"xs\\", \\"sm\\", \\"md\\", \\"lg\\"]"
      },
      {
        "anchorId": "class_foo-directive",
        "description": "This is a directive without any inputs/outputs.",
        "docsId": "FooDirective",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.directive.ts",
        "kind": "directive",
        "name": "FooDirective",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.directive.ts#L27",
        "selector": "[foo]"
      },
      {
        "anchorId": "class_foo-with-inputs-outputs-directive",
        "children": [
          {
            "description": "This describes a decorated input.",
            "defaultValue": "true",
            "kind": "directive-input",
            "name": "inputA",
            "type": "boolean",
            "isRequired": true
          },
          {
            "description": "This describes a signal input.",
            "defaultValue": "true",
            "kind": "directive-input",
            "name": "inputB",
            "type": "InputSignal<boolean>"
          },
          {
            "description": "This describes an input with an alias.",
            "kind": "directive-input",
            "name": "alias1",
            "type": "TemplateRef<unknown> | undefined"
          },
          {
            "kind": "directive-input",
            "name": "alias2",
            "type": "TemplateRef<unknown> | undefined"
          },
          {
            "description": "This describes an input with a setter.",
            "defaultValue": "true",
            "kind": "directive-input",
            "name": "inputC",
            "type": "boolean",
            "isRequired": true
          },
          {
            "description": "This describes an input with a getter.",
            "defaultValue": "false",
            "kind": "directive-input",
            "name": "inputD",
            "type": "boolean",
            "isRequired": true
          },
          {
            "description": "This describes a decorated output.",
            "kind": "directive-output",
            "name": "outputA",
            "type": "EventEmitter<void>"
          },
          {
            "description": "This describes a signal output.",
            "kind": "directive-output",
            "name": "outputB",
            "type": "OutputEmitterRef<void>"
          }
        ],
        "docsId": "FooWithInputsOutputsDirective",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.directive.ts",
        "kind": "directive",
        "name": "FooWithInputsOutputsDirective",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.directive.ts#L33",
        "selector": "[foo]"
      },
      {
        "anchorId": "class_λ2",
        "description": "This is a directive with a lambda name.",
        "docsId": "λ2",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.directive.ts",
        "kind": "directive",
        "name": "λ2",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.directive.ts#L18",
        "selector": "[fooLambda]"
      },
      {
        "anchorId": "enum_foo-enum",
        "description": "This describes the Foo enum.",
        "docsId": "FooEnum",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.enum.ts",
        "kind": "enumeration",
        "children": [
          {
            "description": "This is the Bar value.",
            "kind": "enum-member",
            "name": "Bar",
            "type": "0"
          },
          {
            "description": "This is the Baz value.",
            "kind": "enum-member",
            "name": "Baz",
            "type": "1"
          }
        ],
        "name": "FooEnum",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.enum.ts#L4"
      },
      {
        "anchorId": "function_create-foo",
        "description": "This describes the createFoo function.",
        "docsId": "createFoo",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.function.ts",
        "kind": "function",
        "name": "createFoo",
        "parameters": [
          {
            "description": "This describes param1.",
            "name": "param1",
            "type": "T"
          },
          {
            "defaultValue": "false",
            "description": "This describes param2.",
            "name": "param2",
            "type": "boolean"
          },
          {
            "description": "This describes param3.",
            "isOptional": true,
            "name": "param3",
            "type": "number"
          }
        ],
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.function.ts#L10",
        "type": "FooClass<T>",
        "typeParameters": "<T extends string>"
      },
      {
        "anchorId": "interface_foo-empty-extended-interface",
        "children": [
          {
            "description": "This describes the bar string.",
            "kind": "interface-property",
            "name": "bar",
            "type": "string"
          }
        ],
        "docsId": "FooEmptyExtendedInterface",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.interface.ts",
        "kind": "interface",
        "name": "FooEmptyExtendedInterface",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.interface.ts#L23"
      },
      {
        "anchorId": "interface_foo-empty-interface",
        "docsId": "FooEmptyInterface",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.interface.ts",
        "kind": "interface",
        "name": "FooEmptyInterface",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.interface.ts#L20"
      },
      {
        "anchorId": "interface_foo-interface",
        "children": [
          {
            "isOptional": true,
            "kind": "interface-property",
            "name": "bar",
            "type": "A"
          },
          {
            "description": "This describes baz.",
            "kind": "interface-property",
            "name": "baz",
            "type": "B"
          }
        ],
        "description": "This is the Foo interface.",
        "docsId": "FooInterface",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.interface.ts",
        "indexSignatures": [
          {
            "description": "This describes the index signature.",
            "name": "[_: string]",
            "type": "unknown",
            "parameters": [
              {
                "description": "The name of the thing.",
                "name": "_",
                "type": "string"
              }
            ]
          }
        ],
        "kind": "interface",
        "name": "FooInterface",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.interface.ts#L6"
      },
      {
        "anchorId": "class_foo-module",
        "children": [
          {
            "kind": "class-method",
            "name": "forRoot",
            "type": "ModuleWithProviders<FooModule>"
          }
        ],
        "docsId": "FooModule",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.module.ts",
        "kind": "module",
        "name": "FooModule",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.module.ts#L4"
      },
      {
        "anchorId": "class_foo-pipe",
        "children": [
          {
            "description": "This describes the transform method.",
            "kind": "class-method",
            "name": "transform",
            "parameters": [
              {
                "name": "value",
                "type": "string | undefined"
              },
              {
                "defaultValue": "false",
                "name": "isThing",
                "type": "boolean"
              },
              {
                "name": "bar",
                "type": "boolean"
              },
              {
                "isOptional": true,
                "name": "foo",
                "type": "string"
              }
            ],
            "type": "string"
          }
        ],
        "description": "This describes the Foo pipe.",
        "docsId": "FooPipe",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.pipe.ts",
        "kind": "pipe",
        "name": "FooPipe",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.pipe.ts#L9",
        "templateBindingName": "foo"
      },
      {
        "anchorId": "class_foo-service",
        "children": [
          {
            "description": "This describes a public method that returns a promise.",
            "kind": "class-method",
            "name": "someMethod",
            "type": "Promise<Type<string>>"
          },
          {
            "defaultValue": "''",
            "kind": "class-property",
            "name": "foo",
            "type": "string"
          }
        ],
        "description": "This describes the foo service and everything it does.",
        "docsId": "FooService",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.service.ts",
        "kind": "service",
        "name": "FooService",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.service.ts#L7"
      },
      {
        "anchorId": "type-alias_foo-alias",
        "description": "This is the Foo type alias.",
        "docsId": "FooAlias",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.type-alias.ts",
        "kind": "type-alias",
        "name": "FooAlias",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.type-alias.ts#L6",
        "type": "\\"foo\\" | true | 0 | undefined | null"
      },
      {
        "anchorId": "type-alias_foo-reference-type-alias",
        "description": "This type references a type from another package (i.e., ReferenceType).",
        "docsId": "FooReferenceTypeAlias",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.type-alias.ts",
        "kind": "type-alias",
        "name": "FooReferenceTypeAlias",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.type-alias.ts#L11",
        "type": "string | keyof Component"
      },
      {
        "anchorId": "variable_foo-variable",
        "description": "This is a variable.",
        "docsId": "FOO_VARIABLE",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.variable.ts",
        "kind": "variable",
        "name": "FOO_VARIABLE",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/src/lib/foo.variable.ts#L6",
        "type": "InjectionToken<unknown>"
      }
    ],
    "@skyux/foo/testing": [
      {
        "anchorId": "class_sky-foo-harness",
        "description": "Harness for interacting with a foo component in tests.",
        "docsId": "SkyFooHarness",
        "filePath": "libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/testing/src/foo-harness.ts",
        "kind": "class",
        "name": "SkyFooHarness",
        "repoUrl": "https://github.com/blackbaud/skyux/blob/CURRENT_BRANCH/libs/components/manifest-generator/src/testing/fixtures/example-packages/foo/testing/src/foo-harness.ts#L4"
      }
    ]
  }
}",
    ],
    [
      "/dist/documentation-config.json",
      "{
  "packages": {
    "@skyux/code-examples": {
      "groups": {}
    },
    "@skyux/foo": {
      "groups": {
        "foo": {
          "docsIds": [
            "docs-id-override",
            "FooWithStaticPropertiesClass",
            "FooClass",
            "FooCodeExample1",
            "FooCodeExample2"
          ],
          "primaryDocsId": "FooClass"
        }
      }
    }
  }
}",
    ],
    [
      "/dist/code-examples.json",
      "{
  "examples": {
    "FooCodeExample1": {
      "componentName": "FooCodeExample1",
      "files": {
        "types.ts": "import { Component } from '@angular/core';\\n\\n/**\\n * @title This is a title\\n */\\n@Component({\\n  selector: 'foo-example-1',\\n})\\nexport class FooCodeExample1 {}\\n\\n/**\\n * @title This code example hides its demo.\\n * @docsDemoHidden\\n */\\n@Component({\\n  selector: 'foo-example-2',\\n})\\nexport class FooCodeExample2 {}\\n"
      },
      "importPath": "@skyux/code-examples",
      "primaryFile": "types.ts",
      "selector": "foo-example-1",
      "title": "This is a title"
    },
    "FooCodeExample2": {
      "componentName": "FooCodeExample2",
      "demoHidden": true,
      "files": {
        "types.ts": "import { Component } from '@angular/core';\\n\\n/**\\n * @title This is a title\\n */\\n@Component({\\n  selector: 'foo-example-1',\\n})\\nexport class FooCodeExample1 {}\\n\\n/**\\n * @title This code example hides its demo.\\n * @docsDemoHidden\\n */\\n@Component({\\n  selector: 'foo-example-2',\\n})\\nexport class FooCodeExample2 {}\\n"
      },
      "importPath": "@skyux/code-examples",
      "primaryFile": "types.ts",
      "selector": "foo-example-2",
      "title": "This code example hides its demo."
    }
  }
}",
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
    {
      "type": "return",
      "value": undefined,
    },
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`generate-manifest > should throw for invalid documentation.json 1`] = `
[Error: The following errors were encountered when creating the manifest:
 - Schema validation failed for the documentation.json file found in the "invalid-documentation-json" project.
 - The @docsId "FooInternalClass" referenced by "invalid" is not included in the public API.
 - The @docsId "Duplicate1" referenced by "invalid" is not recognized.
 - The @docsId "Duplicate1" referenced by "invalid" is not recognized.
 - The @docsId "Invalid2" referenced by "invalid" is not recognized.
 - The value for primaryDocsId ("ModuleNotListed") must be included in the docsIds array for group "invalid" (current: FooInternalClass, Duplicate1, Duplicate1, Invalid2).
 - The following code example docsIds are not being referenced within a documentation.json file. Either delete the code example, or add its docsId to a documentation.json file: "FooCodeExample1", "FooCodeExample2"]
`;
