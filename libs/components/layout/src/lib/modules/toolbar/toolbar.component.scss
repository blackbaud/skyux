@use 'libs/components/theme/src/lib/styles/variables' as *;
@use 'scss/variables' as *;
@use 'libs/components/theme/src/lib/styles/compat-tokens-mixins' as compatMixins;

@include compatMixins.sky-default-overrides('.sky-toolbar-container') {
  --sky-override-toolbar-background-color: #{$sky-toolbar-background-color};
  --sky-override-toolbar-border-top-bottom: #{1px solid
    $sky-border-color-neutral-medium};
  --sky-override-toolbar-container-padding: #{$sky-padding-half $sky-padding 0};
}

sky-toolbar + :host {
  .sky-toolbar-container {
    border-top: none;
  }
}

.sky-toolbar-container {
  min-height: $sky-toolbar-min-height;
  background-color: var(--sky-override-toolbar-background-color);
  padding: var(
    --sky-override-toolbar-container-padding,
    var(--sky-space-inset-vertical-top-s)
      var(--sky-space-inset-vertical-right-s)
      var(--sky-space-inset-vertical-bottom-s)
      var(--sky-space-inset-vertical-left-s)
  );
  border-top: var(--sky-override-toolbar-border-top-bottom, none);
  border-bottom: var(--sky-override-toolbar-border-top-bottom, none);
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  position: relative;

  ::ng-deep sky-toolbar-section:not(:first-child) .sky-toolbar-section {
    border-top: var(
      --sky-override-toolbar-border-top-bottom,
      var(--sky-border-width-divider) var(--sky-border-style-divider)
        var(--sky-color-border-divider)
    );
  }

  &:not(.sky-toolbar-sectioned) {
    flex-wrap: nowrap;
  }

  &.sky-viewkeeper-fixed {
    background-color: var(
      --sky-override-toolbar-background-color,
      var(--sky-color-background-page)
    );
  }
}

.sky-toolbar-sectioned {
  display: block;
  padding: 0;
}

.sky-toolbar-items {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}

:host-context(.sky-viewkeeper-fixed) {
  .sky-toolbar-container {
    background-color: var(
      --sky-override-toolbar-background-color,
      var(--sky-color-background-page)
    );
  }
}
