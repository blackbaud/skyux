@use 'libs/components/theme/src/lib/styles/mixins' as mixins;
@use 'libs/components/theme/src/lib/styles/variables' as *;
@use 'libs/components/theme/src/lib/styles/compat-tokens-mixins' as compatMixins;

@include compatMixins.sky-default-overrides('.sky-row') {
  --sky-override-fluid-grid-gutter-size-small: #{$sky-padding-half};
  --sky-override-fluid-grid-gutter-size-medium: #{$sky-padding};
  --sky-override-fluid-grid-gutter-size-large: #{$sky-padding-plus-half};
  --sky-override-fluid-grid-top-bottom: 0;
}

.sky-row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  // Default to large gutters for backwards compatibility.
  // (Prior versions of fluid-grid did not require the wrapping `sky-fluid-grid` component.)
  margin: var(
      --sky-override-fluid-grid-top-bottom,
      calc(var(--sky-space-inset-horizontal-top-xl) * -1)
    )
    calc(
      var(
          --sky-override-fluid-grid-gutter-size-large,
          var(--sky-space-inset-horizontal-right-xl)
        ) *
        -1
    )
    var(
      --sky-override-fluid-grid-top-bottom,
      calc(var(--sky-space-inset-horizontal-bottom-xl) * -1)
    )
    calc(
      var(
          --sky-override-fluid-grid-gutter-size-large,
          var(--sky-space-inset-horizontal-left-xl)
        ) *
        -1
    );
}

:host-context(.sky-fluid-grid-gutter-size-small) {
  .sky-row {
    margin: var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-top-s) * -1)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-small,
            var(--sky-space-inset-horizontal-right-s)
          ) *
          -1
      )
      var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-bottom-s) * -1)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-small,
            var(--sky-space-inset-horizontal-left-s)
          ) *
          -1
      );
  }
}
:host-context(.sky-fluid-grid-gutter-size-small.sky-fluid-grid-no-margin) {
  .sky-row {
    margin: var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-top-s) * -2)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-small,
            var(--sky-space-inset-horizontal-right-s)
          ) *
          -2
      )
      var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-bottom-s) * -2)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-small,
            var(--sky-space-inset-horizontal-left-s)
          ) *
          -2
      );
  }
}

:host-context(.sky-fluid-grid-gutter-size-medium) {
  .sky-row {
    margin: var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-top-m) * -1)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-medium,
            var(--sky-space-inset-horizontal-right-m)
          ) *
          -1
      )
      var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-bottom-m) * -1)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-medium,
            var(--sky-space-inset-horizontal-left-m)
          ) *
          -1
      );
  }
}
:host-context(.sky-fluid-grid-gutter-size-medium.sky-fluid-grid-no-margin) {
  .sky-row {
    margin: var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-top-m) * -2)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-medium,
            var(--sky-space-inset-horizontal-right-m)
          ) *
          -2
      )
      var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-bottom-m) * -2)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-medium,
            var(--sky-space-inset-horizontal-left-m)
          ) *
          -2
      );
  }
}

:host-context(.sky-fluid-grid-gutter-size-large) {
  .sky-row {
    margin: var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-top-xl) * -1)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-large,
            var(--sky-space-inset-horizontal-right-xl)
          ) *
          -1
      )
      var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-bottom-xl) * -1)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-large,
            var(--sky-space-inset-horizontal-left-xl)
          ) *
          -1
      );
  }
}
:host-context(.sky-fluid-grid-gutter-size-large.sky-fluid-grid-no-margin) {
  .sky-row {
    margin: var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-top-xl) * -2)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-large,
            var(--sky-space-inset-horizontal-right-xl)
          ) *
          -2
      )
      var(
        --sky-override-fluid-grid-top-bottom,
        calc(var(--sky-space-inset-horizontal-bottom-xl) * -2)
      )
      calc(
        var(
            --sky-override-fluid-grid-gutter-size-large,
            var(--sky-space-inset-horizontal-left-xl)
          ) *
          -2
      );
  }
}

@include mixins.sky-host-responsive-container-xs-min() {
  .sky-row.sky-row-reverse {
    flex-direction: row;
  }
}

@include mixins.sky-host-responsive-container-sm-min() {
  .sky-row.sky-row-reverse {
    flex-direction: row-reverse;
  }
}
