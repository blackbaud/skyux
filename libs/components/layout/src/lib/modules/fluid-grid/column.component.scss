@use 'libs/components/theme/src/lib/styles/mixins' as mixins;
@use 'libs/components/theme/src/lib/styles/variables' as *;
@use 'libs/components/theme/src/lib/styles/compat-tokens-mixins' as compatMixins;

$sky-fluid-grid-columns: 12 !default;

@include compatMixins.sky-default-overrides('.sky-column') {
  --sky-override-fluid-grid-gutter-size-small: #{$sky-padding-half};
  --sky-override-fluid-grid-gutter-size-medium: #{$sky-padding};
  --sky-override-fluid-grid-gutter-size-large: #{$sky-padding-plus-half};
  --sky-override-fluid-grid-top-bottom: 0;
}

@mixin create_columns($screen-size: sm) {
  @for $i from 1 through $sky-fluid-grid-columns {
    sky-column.sky-column-#{$screen-size}-#{$i} {
      width: calc(#{$i} / #{$sky-fluid-grid-columns} * 100%);
    }
  }
}

sky-column.sky-column {
  padding: var(
      --sky-override-fluid-grid-top-bottom,
      var(--sky-space-inset-horizontal-top-xl)
    )
    var(
      --sky-override-fluid-grid-gutter-size-large,
      var(--sky-space-inset-horizontal-right-xl)
    )
    var(
      --sky-override-fluid-grid-top-bottom,
      var(--sky-space-inset-horizontal-bottom-xl)
    )
    var(
      --sky-override-fluid-grid-gutter-size-large,
      var(--sky-space-inset-horizontal-left-xl)
    );
  width: 100%;
  min-height: 1px;
}

.sky-fluid-grid-gutter-size-small sky-column.sky-column {
  padding: var(
      --sky-override-fluid-grid-top-bottom,
      var(--sky-space-inset-horizontal-top-s)
    )
    var(
      --sky-override-fluid-grid-gutter-size-small,
      var(--sky-space-inset-horizontal-right-s)
    )
    var(
      --sky-override-fluid-grid-top-bottom,
      var(--sky-space-inset-horizontal-bottom-s)
    )
    var(
      --sky-override-fluid-grid-gutter-size-small,
      var(--sky-space-inset-horizontal-left-s)
    );
}

.sky-fluid-grid-gutter-size-medium sky-column.sky-column {
  padding: var(
      --sky-override-fluid-grid-top-bottom,
      var(--sky-space-inset-horizontal-top-m)
    )
    var(
      --sky-override-fluid-grid-gutter-size-medium,
      var(--sky-space-inset-horizontal-right-m)
    )
    var(
      --sky-override-fluid-grid-top-bottom,
      var(--sky-space-inset-horizontal-bottom-m)
    )
    var(
      --sky-override-fluid-grid-gutter-size-medium,
      var(--sky-space-inset-horizontal-left-m)
    );
}

@include mixins.sky-host-responsive-container-xs-min(false) {
  @include create_columns(xs);

  // This is needed for operation inside a reactive container. Without it the media breakpoint
  // will be used and the screen size version takes over.
  @for $i from 1 through $sky-fluid-grid-columns {
    sky-column:not([class*='sky-column-xs-']) {
      width: 100%;
    }
  }
}

@include mixins.sky-host-responsive-container-sm-min(false) {
  @include create_columns(sm);
}

@include mixins.sky-host-responsive-container-md-min(false) {
  @include create_columns(md);
}

@include mixins.sky-host-responsive-container-lg-min(false) {
  @include create_columns(lg);
}
