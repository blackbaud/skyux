{
  "@skyux/a11y": {
    "skip-link": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-skip-link-args",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Options specified when setting the page's skip links.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySkipLinkArgs",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The skip links to create.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "links",
              "type": "SkySkipLink[]"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/a11y/testing": {
    "root": {
      "classes": [
        {
          "anchorId": "class-sky-skip-links-harness",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Harness for interacting with a skip link component in tests.",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Clicks the skip link at the given index.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "clickSkipLink",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "index",
                  "type": "number"
                }
              ],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets the text of the skip link at the given index.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getSkipLinkText",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "index",
                  "type": "number"
                }
              ],
              "returnType": "Promise<string>"
            }
          ],
          "name": "SkySkipLinksHarness",
          "properties": []
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/action-bars": {
    "summary-action-bar": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Contains secondary actions specified with `sky-summary-action-bar-secondary-action` components.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySummaryActionBarSecondaryActionsComponent",
          "selector": "sky-summary-action-bar-secondary-actions",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/ag-grid": {
    "ag-grid": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-get-grid-options-args",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyGetGridOptionsArgs",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The format to use for formatting date strings in the `SkyCellType.Date` column.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "dateFormat",
              "type": "string"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The [AG Grid `gridOptions`](https://www.ag-grid.com/javascript-grid-properties/) that override default SKY UX `gridOptions`. SKY UX column types for components and column `cellClassRules` enforce required cell styling and cannot be overridden.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "gridOptions",
              "type": "GridOptions<any>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The locale for location-specific formatting, such as date values for the `SkyCellType.Date` column.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "locale",
              "type": "string"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/angular-tree-component": {
    "angular-tree": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Replaces the default tree node template with a SKY UX node as part of the `SkyAngularTreeModule` that provides SKY UX components and styles to complement the `angular-tree-component` library and apply SKY UX themes and functionality to hierarchical list views. You must wrap this component in an `ng-template` tag with the template reference variable `#treeNodeFullTemplate`. For information about tree node templates, see the [Angular tree component documentation](https://angular2-tree.readme.io/docs/templates). To display context menus with actions for individual items in hierarchical lists, place [dropdowns](https://developer.blackbaud.com/skyux-popovers/docs/dropdown?docs-active-tab=design) inside the Angular tree node component, which automatically handles styling and positioning for context menus.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAngularTreeNodeComponent",
          "selector": "sky-angular-tree-node",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "A help key that identifies the global help content to display. When specified, a [help inline](https://developer.blackbaud.com/skyux/components/help-inline) button is placed beside the tree node label. Clicking the button invokes [global help](https://developer.blackbaud.com/skyux/learn/develop/global-help) as configured by the application.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpKey",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The content of the help popover. When specified, a [help inline](https://developer.blackbaud.com/skyux/components/help-inline) button is added to the tree node. The help inline button displays a [popover](https://developer.blackbaud.com/skyux/components/popover) when clicked using the specified content and optional title.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpPopoverContent",
              "type": "string | TemplateRef<unknown>",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The title of the help popover. This property only applies when `helpPopoverContent` is also specified.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpPopoverTitle",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The `index` property from the parent `ng-template`.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "index",
              "type": "number",
              "isRequired": true
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The `node` property from the parent `ng-template`. For information about the `TreeNode` object, see the [Angular tree component documentation](https://angular2-tree.readme.io/docs/api).",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "node",
              "type": "TreeNode",
              "isRequired": true
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The `templates` property from the parent `ng-template`.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "templates",
              "type": "any",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/animations": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": [
        {
          "anchorId": "variable-sky-animation-slide",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "skyAnimationSlide",
          "type": "AnimationTriggerMetadata"
        }
      ]
    }
  },
  "@skyux/assets": {
    "root": {
      "classes": [
        {
          "anchorId": "class-sky-app-assets-service",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "An abstract class for injecting the ability to retrieve an asset file's URL at runtime. The implementing class will be generated during build time.",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getAllUrls",
              "parameters": [],
              "returnType": "Record<string, any>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getUrl",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "path",
                  "type": "string"
                }
              ],
              "returnType": "string"
            }
          ],
          "name": "SkyAppAssetsService",
          "properties": []
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/autonumeric": {
    "autonumeric": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-autonumeric-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Custom options to provide to the underlying [AutoNumeric library](https://github.com/autoNumeric/autoNumeric). The value can be set to `string`, which is an alias that represents a [set of predefined set of options](https://github.com/autoNumeric/autoNumeric#predefined-options) for a currency or language, or `Options`, which is a [custom set of options](https://github.com/autoNumeric/autoNumeric#options) that override any default options that the `skyAutonumeric` attribute specifies.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAutonumericOptions",
          "type": "string | keyof AutoNumeric.PredefinedOptions | AutoNumeric.Options"
        }
      ],
      "variables": []
    }
  },
  "@skyux/avatar": {
    "avatar": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-avatar-src",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAvatarSrc",
          "type": "string | Blob | File"
        }
      ],
      "variables": []
    }
  },
  "@skyux/avatar/testing": {
    "root": {
      "classes": [
        {
          "anchorId": "class-sky-avatar-harness",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Harness for interacting with an avatar component in tests.",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Closes the currently displayed error.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "closeError",
              "parameters": [],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Simulates the user selecting or dropping an image onto the component.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "dropAvatarFile",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "file",
                  "type": "File"
                },
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": true,
                  "name": "waitForChange",
                  "type": "boolean"
                }
              ],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets whether users can change the image.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getCanChange",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets the initials displayed when no image URL is specified.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getInitials",
              "parameters": [],
              "returnType": "Promise<string>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets the avatar's current image URL or Blob.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getSrc",
              "parameters": [],
              "returnType": "Promise<string | Blob>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets whether an error indicating an invalid file type is displayed.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "hasFileTypeError",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets whether an error indicating an invalid file size is displayed.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "hasMaxSizeError",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets a `HarnessPredicate` that can be used to search for a `SkyAvatarHarness` that meets certain criteria.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": true,
              "name": "with",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "filters",
                  "type": "SkyAvatarHarnessFilters"
                }
              ],
              "returnType": "HarnessPredicate<SkyAvatarHarness>"
            }
          ],
          "name": "SkyAvatarHarness",
          "properties": []
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/colorpicker": {
    "colorpicker": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-colorpicker-rgba",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Colors specified as a combination of red, green, and blue with an alpha channel to set the opacity.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyColorpickerRgba",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The alpha channel to set the opacity.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "alpha",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The percentage of blue.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "blue",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The percentage of green.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "green",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The percentage of red.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "red",
              "type": "number"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/colorpicker/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-colorpicker-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of `SkyColorpickerHarness` instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyColorpickerHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/config": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-skyux-config-params",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The list of parameters that are allowed at runtime.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyuxConfigParams",
          "type": "Record<string, boolean | { excludeFromLinks?: boolean; excludeFromRequests?: boolean; required?: boolean; value?: any; }>"
        }
      ],
      "variables": []
    }
  },
  "@skyux/core": {
    "adapter-service": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-focusable-children-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Options for getting focusable children.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFocusableChildrenOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "By default, the `getFocusableChildren()` function will filter out elements with a `tabIndex` of `-1`. Setting `ignoreTabIndex = true` will ignore this filter.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "ignoreTabIndex",
              "type": "boolean"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "By default, the `getFocusableChildren()` function will only return visible elements. Setting `ignoreVisibility = true` will ignore this filter.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "ignoreVisibility",
              "type": "boolean"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "affix": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-affix-vertical-alignment",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The vertical alignment of the affixed element to the base element.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAffixVerticalAlignment",
          "type": "'top' | 'middle' | 'bottom'"
        }
      ],
      "variables": []
    },
    "breakpoint-observer": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-breakpoint",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The name of a viewport or container breakpoint.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyBreakpoint",
          "type": "'xs' | 'sm' | 'md' | 'lg'"
        }
      ],
      "variables": []
    },
    "dock": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-dock-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Options for adding a dock component to the page.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDockOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The location on the page where the dock component should be rendered.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "location",
              "type": "SkyDockLocation"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The reference element used when using the `BeforeElement` or `ElementBottom` locations.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "referenceEl",
              "type": "HTMLElement"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The z-index for the dock element",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "zIndex",
              "type": "number"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "dynamic-component": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-dynamic-component-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Options for adding a dynamic component to the page.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDynamicComponentOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The environment injector to use instead of the dynamic component service's injector.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "environmentInjector",
              "type": "EnvironmentInjector"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The location on the page where the dynamic component should be rendered.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "location",
              "type": "SkyDynamicComponentLocation"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Providers to inject into the new component.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "providers",
              "type": "StaticProvider[]"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The reference element used when using the `ElementTop` or `ElementBottom` locations.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "referenceEl",
              "type": "HTMLElement"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The view container reference where the new component should be appended.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "viewContainerRef",
              "type": "ViewContainerRef"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "format": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [
        {
          "anchorId": "class-sky-app-format",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "formatText",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "format",
                  "type": "string"
                },
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "args",
                  "type": "any[]"
                }
              ],
              "returnType": "string"
            }
          ],
          "name": "SkyAppFormat",
          "properties": []
        }
      ],
      "typeAliases": [],
      "variables": []
    },
    "help": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": [
        {
          "anchorId": "variable-skyhelpglobaloptions",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Injection token for specifying and retrieving global help options.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SKY_HELP_GLOBAL_OPTIONS",
          "type": "InjectionToken<SkyHelpGlobalOptions>"
        }
      ]
    },
    "id": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Sets the element's `id` attribute to a unique ID. To reference this unique ID on other elements, such as in a `label` element's `for` attribute, assign this directive to a template reference variable, then use its `id` property.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyIdDirective",
          "selector": "[skyId]",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "layout-host": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-layout-host-for-child-args",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyLayoutHostForChildArgs",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "layout",
              "type": "string"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "log": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-log-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "The `SkyLogService` no longer needs the `SkyLogModule`.\nThe `SkyLogModule` can be removed from your project.",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "methods": [],
          "name": "SkyLogModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "media-query": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-media-query-listener",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "Subscribe to the `breakpointChange` observable instead.",
          "description": "The function that is called when the breakpoints change. It is called with a `SkyMediaBreakpoints` argument, which is an enum that represents the new breakpoint.",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyMediaQueryListener",
          "type": "(args: SkyMediaBreakpoints) => void"
        }
      ],
      "variables": []
    },
    "numeric": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-numeric-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Provides arguments for the number to format.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyNumericOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies the display of the currency. Defaults to 'symbol'.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "currencyDisplay",
              "type": "'symbol' | 'code' | 'narrowSymbol' | 'name'"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies the format of the currency.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "currencySign",
              "type": "'standard' | 'accounting'"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies the maximum number of digits after the decimal separator.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "digits",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies how to format the number. Options are `currency` or `number`.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "format",
              "type": "string"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies the ISO4217 currency code to use for currency formatting.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "iso",
              "type": "string"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies the locale code to use when formatting.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "locale",
              "type": "string"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies the minimum number of digits after the decimal separator. This property only applies when the `truncate` property is set to `false`. If `digits` specifies a maximum number of digits, then `minDigits` must be less than that value.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "minDigits",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Indicates whether to shorten numbers to rounded numbers and abbreviation characters such as K for thousands, M for millions, B for billions, and T for trillions.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "truncate",
              "type": "boolean"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Specifies the minimum value at which numbers are shortened to rounded numbers and abbreviation characters. Values less than `1000` are not truncated.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "truncateAfter",
              "type": "number"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "overlay": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-overlay-position",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyOverlayPosition",
          "type": "'absolute' | 'fixed'"
        }
      ],
      "variables": []
    },
    "percent-pipe": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-percent-pipe-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [],
          "name": "SkyPercentPipeModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "resize-observer": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [
        {
          "anchorId": "class-sky-resize-observer-service",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Service to create rxjs observables for changes to the content box dimensions of elements.",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Create rxjs observable to get size changes for an element ref.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "observe",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "element",
                  "type": "ElementRef<any>"
                }
              ],
              "returnType": "Observable<ResizeObserverEntry>"
            }
          ],
          "name": "SkyResizeObserverService",
          "properties": []
        }
      ],
      "typeAliases": [],
      "variables": []
    },
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": [
        {
          "anchorId": "variable-version",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Represents the version of @skyux/core.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "VERSION",
          "type": "Version"
        }
      ]
    },
    "scrollable-host": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [
        {
          "anchorId": "class-sky-scrollable-host-service",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Returns the given element's current scrollable host",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getScrollableHost",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "The element whose scrollable host is being requested",
                  "isOptional": false,
                  "name": "elementRef",
                  "type": "ElementRef<any>"
                }
              ],
              "returnType": "HTMLElement | Window"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "watchScrollableHostClipPathChanges",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "elementRef",
                  "type": "ElementRef<any>"
                }
              ],
              "returnType": "Observable<string>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Returns an observable which emits whenever the element's scrollable host emits a scroll event. The observable will always emit the scroll events from the elements current scrollable host and will update based on any scrollable host changes. The observable will also emit once whenever the scrollable host changes.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "watchScrollableHostScrollEvents",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "The element whose scrollable host scroll events are being requested",
                  "isOptional": false,
                  "name": "elementRef",
                  "type": "ElementRef<any>"
                }
              ],
              "returnType": "Observable<void>"
            }
          ],
          "name": "SkyScrollableHostService",
          "properties": []
        }
      ],
      "typeAliases": [],
      "variables": []
    },
    "title": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-app-set-title-args",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAppSetTitleArgs",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "titleParts",
              "type": "string[]"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "trim": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Trims whitespace in each text node that is a direct descendent of the current element.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTrimDirective",
          "selector": "[skyTrim]",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "ui-config": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [
        {
          "anchorId": "class-sky-uiconfig-service",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getConfig",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "key",
                  "type": "string"
                },
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": true,
                  "name": "defaultConfig",
                  "type": "any"
                }
              ],
              "returnType": "Observable<any>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "setConfig",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "key",
                  "type": "string"
                },
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "value",
                  "type": "any"
                }
              ],
              "returnType": "Observable<any>"
            }
          ],
          "name": "SkyUIConfigService",
          "properties": []
        }
      ],
      "typeAliases": [],
      "variables": []
    },
    "viewkeeper": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-viewkeeper-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Options for creating a viewkeeper instance.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyViewkeeperOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The element that defines the bounds in which to keep the element in view. When the boundary element is scrolled out of view, the viewkeeper element will be scrolled out of view.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "boundaryEl",
              "type": "HTMLElement"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The element to keep in view.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "el",
              "type": "HTMLElement"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The scrollable parent where the viewkeeper resides. It should listen to and be positioned within the parent.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "scrollableHost",
              "type": "HTMLElement"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Sets the width of the viewkeeper element to the width of its host element. Otherwise, if the element does not have an explicit width specified, the element would collapse horizontally as a result of fixing the element to the top of the viewport.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "setWidth",
              "type": "boolean"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Reserved space in pixels above the viewkeeper element.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "verticalOffset",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The element under which the viewkeeper element should be fixed. Typically this is another viewkeeper element that is above the current viewkeeper element in the same boundary element.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "verticalOffsetEl",
              "type": "HTMLElement"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Reserved space in pixels at the top of the viewport.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "viewportMarginTop",
              "type": "number"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "window": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [
        {
          "anchorId": "class-sky-app-window-ref",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The application window reference service references the global window variable. After users inject SkyAppWindowRef into a component, they can use the service to interact with window properties and event handlers by referencing its nativeWindow property.",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [],
          "name": "SkyAppWindowRef",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The global `window` variable.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "nativeWindow",
              "type": "any"
            }
          ]
        }
      ],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/core/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [
        {
          "anchorId": "function-provide-sky-media-query-testing",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Adds mocks to allow interactions with breakpoints in tests.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "provideSkyMediaQueryTesting",
          "parameters": [],
          "returnType": "Provider[]"
        }
      ],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/data-manager": {
    "data-manager": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-data-view-state-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDataViewStateOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "An untyped property that tracks any view-specific state information that is relevant to a data manager but that existing properties do not cover.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "additionalData",
              "type": "any"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The IDs of the columns able to be displayed for column-based views. This property is required when utilizing a grid-based view, a column picker, or both.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "columnIds",
              "type": "string[]"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The widths of columns in column-based views for xs and sm+ breakpoints. If using sticky settings, the widths a user sets will be persisted.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "columnWidths",
              "type": "SkyDataViewColumnWidths"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The IDs of the columns displayed for column-based views.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "displayedColumnIds",
              "type": "string[]"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The ID of this view.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "viewId",
              "type": "string"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/datetime": {
    "date-pipe": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [
        {
          "anchorId": "class-sky-fuzzy-date-pipe",
          "codeExample": "{{ myFuzzyDate | skyFuzzyDate:'MMM Y' }}\n{{ myFuzzyDate | skyFuzzyDate:'MMM Y':'en-CA' }}",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Formats date values using two or more date tokens that represent the day, month, and year. The tokens are described in the [moment.js values](https://momentjs.com/docs/#/displaying/).",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFuzzyDatePipe",
          "transformMethod": {
            "codeExample": "",
            "codeExampleLanguage": "markup",
            "deprecationReason": "",
            "description": "Transforms fuzzy date values using two or more date tokens that represent the day, month, and year.",
            "isDeprecated": false,
            "isPreview": false,
            "isStatic": false,
            "name": "transform",
            "parameters": [
              {
                "defaultValue": "",
                "description": "Specifies the date value to transform.",
                "isOptional": false,
                "name": "value",
                "type": "SkyFuzzyDate"
              },
              {
                "defaultValue": "",
                "description": "Specifies the format to apply to the transform. You construct the format string with a two or more tokens that specify the components of date-time value. The tokens are described in the [moment.js values](https://momentjs.com/docs/#/displaying/). If you don't provide a format, `SkyFuzzyDatePipe` attempts to format fuzzy dates based on the browser's default locale.",
                "isOptional": true,
                "name": "format",
                "type": "string"
              },
              {
                "defaultValue": "",
                "description": "Specifies the locale code to use in the transform.",
                "isOptional": true,
                "name": "locale",
                "type": "string"
              }
            ],
            "returnType": "string"
          }
        }
      ],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "date-range-picker": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-date-range-calculator-validate-function",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDateRangeCalculatorValidateFunction",
          "type": "(value?: SkyDateRange) => ValidationErrors | null"
        }
      ],
      "variables": []
    },
    "datepicker": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-fuzzy-date",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFuzzyDate",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The day in a fuzzy date, where `1` sets the day to the first day of the specified month.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "day",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The month in a fuzzy date, where `1` sets the month to January.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "month",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The year in a fuzzy date.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "year",
              "type": "number"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "timepicker": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-timepicker-time-format-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTimepickerTimeFormatType",
          "type": "'hh' | 'HH'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/datetime/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-date-range-picker-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of `SkyDateRangePickerHarness` instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDateRangePickerFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/errors": {
    "error": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-error-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The type of error to display.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyErrorType",
          "type": "'broken' | 'construction' | 'notfound' | 'security'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/flyout": {
    "flyout": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-flyout-permalink",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFlyoutPermalink",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The text label for the permalink button.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "label",
              "type": "string"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The object that represents the [Angular application route](https://angular.io/api/router/Router#navigate). The object includes two properties that are mapped to Angular's `Router.navigate(commands, extras?)` method.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "route",
              "type": "{ commands: any[]; extras?: NavigationExtras; }"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The external URL for the permalink.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "url",
              "type": "string"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/forms": {
    "character-counter": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "λ23",
          "transformMethod": {
            "codeExample": "",
            "codeExampleLanguage": "markup",
            "deprecationReason": "",
            "description": "",
            "isDeprecated": false,
            "isPreview": false,
            "isStatic": false,
            "name": "transform",
            "parameters": [
              {
                "defaultValue": "",
                "description": "",
                "isOptional": false,
                "name": "characterCount",
                "type": "number"
              },
              {
                "defaultValue": "",
                "description": "",
                "isOptional": false,
                "name": "characterCountLimit",
                "type": "number"
              }
            ],
            "returnType": "string"
          }
        }
      ],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "checkbox": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-checkbox-group-heading-style",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyCheckboxGroupHeadingStyle",
          "type": "3 | 4 | 5"
        }
      ],
      "variables": []
    },
    "field-group": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-field-group-heading-style",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFieldGroupHeadingStyle",
          "type": "3 | 4"
        }
      ],
      "variables": []
    },
    "file-attachment": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-file-validate-fn",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Custom validation run on each file uploaded. The string returned is used as the error message in multi-file attachment.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFileValidateFn",
          "type": "(file: SkyFileItem) => string | undefined"
        }
      ],
      "variables": []
    },
    "form-error": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Displays default and custom form field error messages for form field components. Set `labelText` on the form field component to automatically display required, maximum length, minimum length, date, email, phone number, time, and URL errors. To display custom errors, include sky-form-error elements in the form field component.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFormErrorComponent",
          "selector": "sky-form-error",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The name of the error.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "errorName",
              "type": "string",
              "isRequired": true
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The error message to display.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "errorText",
              "type": "string",
              "isRequired": true
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "input-box": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A wrapper component that provides styling and accessibility to form elements.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyInputBoxComponent",
          "selector": "sky-input-box",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to visually highlight the input box as disabled. To disable the input box's input element, use the HTML `disabled` attribute or the Angular `FormControl.disabled` property. If the input element is mapped to an Angular form control (e.g. `formControlName`, `ngModel`, etc.), \"disabled\" styles are applied automatically; if the input element is not associated with an Angular form control, the `disabled` property on the input box must be set to `true` to visually indicate the disabled state on the input box.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "disabled",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to visually highlight the input box in an error state. If not specified, the input box displays in an error state when either the `ngModel` or the Angular `FormControl` contains an error.",
              "defaultValue": "undefined",
              "isDeprecated": false,
              "isPreview": false,
              "name": "hasErrors",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "A help key that identifies the global help content to display. When specified along with `labelText`, a [help inline](https://developer.blackbaud.com/skyux/components/help-inline) button is placed beside the input box label. Clicking the button invokes [global help](https://developer.blackbaud.com/skyux/learn/develop/global-help) as configured by the application. This property only applies when `labelText` is also specified.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpKey",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The content of the help popover. When specified along with `labelText`, a [help inline](https://developer.blackbaud.com/skyux/components/help-inline) button is added to the input box label. The help inline button displays a [popover](https://developer.blackbaud.com/skyux/components/popover) when clicked using the specified content and optional title. This property only applies when `labelText` is also specified.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpPopoverContent",
              "type": "string | TemplateRef<unknown>",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The title of the help popover. This property only applies when `helpPopoverContent` is also specified.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpPopoverTitle",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The text to display as the input's label and in known validation error messages. The label will automatically be associated with the `input`, `select`, `textarea`, or compatible SKY UX component included in the input box.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "labelText",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The maximum number of characters allowed in the input. A [SKY UX character count](https://developer.blackbaud.com/skyux/components/character-count) will be placed on the input element with the appropriate validator.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "characterLimit",
              "type": "number",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "[Persistent inline help text](https://developer.blackbaud.com/skyux/design/guidelines/user-assistance#inline-help) that provides additional context to the user.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "hintText",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the input box is stacked on another input box. When specified, the appropriate vertical spacing is automatically added to the input box.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "stacked",
              "type": "unknown",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "radio": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-radio-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "radioType is no longer supported",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyRadioType",
          "type": "'danger' | 'info' | 'success' | 'warning'"
        }
      ],
      "variables": []
    },
    "selection-box": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Creates a button to present users with a choice or question before proceeding with a one-time process.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySelectionBoxComponent",
          "selector": "sky-selection-box",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The radio button or checkbox to display in the selection box.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "control",
              "type": "SkyCheckboxComponent | SkyRadioComponent",
              "isRequired": true
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "toggle-switch": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-toggle-switch-change",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Indicates whether the toggle switch is selected.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyToggleSwitchChange",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "checked",
              "type": "boolean"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/forms/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-form-errors-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of `SkyFormErrorHarness` instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFormErrorsHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/grids": {
    "grid": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-grid-column-alignment",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid",
          "description": "Represents the horizontal alignment of the column's data and header.",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyGridColumnAlignment",
          "type": "'left' | 'center' | 'right'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/help-inline": {
    "help-inline": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Inserts a help button beside an element, such as a field, to display contextual information about the element.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyHelpInlineComponent",
          "selector": "sky-help-inline",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The ID of the element that the help inline button controls. This property [supports accessibility rules for disclosures](https://www.w3.org/TR/wai-aria-practices-1.1/#disclosure). For more information about the `aria-controls` attribute, see the [WAI-ARIA definition](https://www.w3.org/TR/wai-aria/#aria-controls).",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "ariaControls",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether an element or popover controlled by the help inline button is expanded. If popoverContent is specified, this value is overridden with popover expanded status.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "ariaExpanded",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The ARIA label for the help inline button. This sets the button's `aria-label` to provide a text equivalent for screen readers. Will be overridden if label text is set.",
              "defaultValue": "\"Show help content\"",
              "isDeprecated": false,
              "isPreview": false,
              "name": "ariaLabel",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "A unique key that identifies the [global help](https://developer.blackbaud.com/skyux/learn/develop/global-help) content to display when the button is clicked.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpKey",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The content of the help popover. When specified, clicking the help inline button opens a popover with this content and optional title.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "popoverContent",
              "type": "string | TemplateRef<unknown>",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The title of the help popover. This property only applies when `popoverContent` is also specified.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "popoverTitle",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The label of the component the help inline button is attached to.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "labelText",
              "type": "unknown",
              "isRequired": false
            }
          ],
          "outputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Fires when the user clicks the help inline button.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "actionClick",
              "type": "EventEmitter<void>"
            }
          ]
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/help-inline/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-help-inline-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of `SkyHelpInlineHarness` instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyHelpInlineHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/i18n": {
    "i18n": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": [
        {
          "anchorId": "variable-skylibresourcesproviders",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "`SKY_LIB_RESOURCES_PROVIDERS` is no longer needed and will be removed in a future major version of SKY UX.",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SKY_LIB_RESOURCES_PROVIDERS",
          "type": "InjectionToken<SkyLibResourcesProvider[]>"
        }
      ]
    }
  },
  "@skyux/icon": {
    "icon": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-icon-variant-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyIconVariantType",
          "type": "'line' | 'solid'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/icon/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-icon-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of SkyIconHarness instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyIconHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/indicators": {
    "alert": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAlertComponent",
          "selector": "sky-alert",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to include a close button for users to dismiss the alert.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "closeable",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the alert is closed.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "closed",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The style for the alert, which determines the icon and background color. The valid options are `danger`, `info`, `success`, and `warning`.",
              "defaultValue": "\"warning\"",
              "isDeprecated": false,
              "isPreview": false,
              "name": "alertType",
              "type": "unknown",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The text to be read by screen readers for users who cannot see the indicator icon when `descriptionType` is `custom`.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "customDescription",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The predefined text to be read by screen readers for users who cannot see the alert icon. This property is optional but will be required in future versions of SKY UX.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "descriptionType",
              "type": "SkyIndicatorDescriptionType",
              "isRequired": false
            }
          ],
          "outputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Fires when users close the alert.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "closedChange",
              "type": "EventEmitter<boolean>"
            }
          ]
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "chevron": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-chevron-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [],
          "name": "SkyChevronModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "expansion-indicator": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-expansion-indicator-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [],
          "name": "SkyExpansionIndicatorModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "illustration": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-illustration-size",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyIllustrationSize",
          "type": "'sm' | 'md' | 'lg' | 'xl'"
        }
      ],
      "variables": []
    },
    "key-info": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-key-info-layout-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyKeyInfoLayoutType",
          "type": "'horizontal' | 'vertical'"
        }
      ],
      "variables": []
    },
    "label": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-label-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyLabelType",
          "type": "'danger' | 'info' | 'success' | 'warning'"
        }
      ],
      "variables": []
    },
    "shared": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-indicator-icon-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyIndicatorIconType",
          "type": "'danger' | 'info' | 'success' | 'warning'"
        }
      ],
      "variables": []
    },
    "status-indicator": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Displays status text with an icon matching the specified indicator type. To display a help button beside the label, include a help button element, such as `sky-help-inline`, in the `sky-status-indicator` element and a `sky-control-help` CSS class on that help button element.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyStatusIndicatorComponent",
          "selector": "sky-status-indicator",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "A help key that identifies the global help content to display. When specified, a [help inline](https://developer.blackbaud.com/skyux/components/help-inline) button is placed beside the status indicator label. Clicking the button invokes global help as configured by the application.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpKey",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The content of the help popover. When specified, a [help inline](https://developer.blackbaud.com/skyux/components/help-inline) button is added to the status indicator. The help inline button displays a [popover](https://developer.blackbaud.com/skyux/components/popover) when clicked using the specified content and optional title.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpPopoverContent",
              "type": "string | TemplateRef<unknown>",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The title of the help popover. This property only applies when `helpPopoverContent` is also specified.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpPopoverTitle",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The text to be read by screen readers for users who cannot see the indicator icon when `descriptionType` is `custom`.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "customDescription",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The predefined text to be read by screen readers for users who cannot see the indicator icon.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "descriptionType",
              "type": "SkyIndicatorDescriptionType",
              "isRequired": true
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The style for the status indicator, which determines the icon.",
              "defaultValue": "\"warning\"",
              "isDeprecated": false,
              "isPreview": false,
              "name": "indicatorType",
              "type": "unknown",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "text-highlight": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Highlights all matching text within the current DOM element.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTextHighlightDirective",
          "selector": "[skyHighlight]",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The text to highlight.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "skyHighlight",
              "type": "unknown",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "tokens": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-tokens-message",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTokensMessage",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The type of message.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "type",
              "type": "SkyTokensMessageType"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "wait": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyWaitComponent",
          "selector": "sky-wait",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The ARIA label for the wait icon. This sets the icon's `aria-label` attribute to provide a text equivalent for screen readers [to support accessibility](https://developer.blackbaud.com/skyux/learn/accessibility) when an element or page loads and when users tab to a wait icon. The default value varies based on whether the wait is for an element or a page and whether it is a blocking wait. For example, the default for a page-level blocking wait is \"Page loading. Please wait.\" For element-level waits, we recommend that consumers overwrite the default to describe the specific element. \"For more information, see the Design tab and the [WAI-ARIA `aria-label` definition](https://www.w3.org/TR/wai-aria/#aria-label).",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "ariaLabel",
              "type": "unknown",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "When set to `true`, wait indication appears on the page level instead of the parent element level. We recommend that you use the `beginBlockingPageWait` or `beginNonBlockingPageWait` functions of the `SkyWaitService` instead of setting this on the component level.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "isFullPage",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "When set to `true`, wait indication appears in the bottom left corner of the element instead of hiding the entire parent element.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "isNonBlocking",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "When set to `true`, wait indication appears on the parent element of the `sky-wait` component.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "isWaiting",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Screen reader text [to support accessibility](https://developer.blackbaud.com/skyux/learn/accessibility) when the wait toggles off.  The default varies based on whether the wait is for an element or a page. For example, the default for a page-level wait is \"Page loading complete.\" For element-level waits, we recommend that consumers overwrite the default to describe the specific element. For more information, see the Design tab and the [WCAG documentation on status messages](https://www.w3.org/WAI/WCAG21/Understanding/status-messages.html).",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "screenReaderCompletedText",
              "type": "unknown",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/indicators/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-wait-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of SkyWaitHarness instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyWaitHarnessFilters",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Only find blocking or non-blocking instances created by the `SkyWaitService`.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "servicePageWaitType",
              "type": "'blocking' | 'non-blocking'"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/inline-form": {
    "inline-form": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-inline-form-config",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies configuration options for the buttons to display with the inline form.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyInlineFormConfig",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The buttons to display with the inline form. The valid options are `Custom` for custom buttons, `DoneCancel` for Done and Cancel buttons, `DoneDeleteCancel` for Done, Delete, and Cancel buttons, `SaveCancel` for Save and Cancel buttons, and `SaveDeleteCancel` for Save, Delete, and Cancel buttons.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "buttonLayout",
              "type": "SkyInlineFormButtonLayout"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Configuration options for the inline form's buttons when `buttonLayout` is set to `Custom`.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "buttons",
              "type": "SkyInlineFormButtonConfig[]"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/layout": {
    "action-button": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-action-button-container-align-items-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyActionButtonContainerAlignItemsType",
          "type": "'center' | 'left'"
        }
      ],
      "variables": []
    },
    "back-to-top": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-back-to-top-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies options for the back to top component.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyBackToTopOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to hide the back to top button.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "buttonHidden",
              "type": "boolean"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "box": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-box-heading-style",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyBoxHeadingStyle",
          "type": "2 | 3 | 4 | 5"
        }
      ],
      "variables": []
    },
    "card": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "`SkyCardComponent` is deprecated. For other SKY UX components that group and list content, see the content containers guidelines. For more information, see https://developer.blackbaud.com/skyux/design/guidelines/content-containers.",
          "description": "Creates a a small container to highlight important information.",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyCardComponent",
          "selector": "sky-card",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to display a checkbox to the right of the card title. Users can select multiple checkboxes and perform actions on the selected cards.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "selectable",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the card is selected. This only applies to card where `selectable` is set to `true`.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "selected",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The size of the card. The valid options are `\"large\"` and `\"small\"`.",
              "defaultValue": "\"large\"",
              "isDeprecated": false,
              "isPreview": false,
              "name": "size",
              "type": "string",
              "isRequired": false
            }
          ],
          "outputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Fires when users select or deselect the card.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "selectedChange",
              "type": "EventEmitter<boolean>"
            }
          ]
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "definition-list": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies the value in a label-value pair.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDefinitionListValueComponent",
          "selector": "sky-definition-list-value",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "description-list": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-description-list-mode-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "How to display the term-description pairs within a description list.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDescriptionListModeType",
          "type": "'horizontal' | 'longDescription' | 'vertical'"
        }
      ],
      "variables": []
    },
    "fluid-grid": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-fluid-grid-gutter-size-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFluidGridGutterSizeType",
          "type": "'small' | 'medium' | 'large'"
        }
      ],
      "variables": []
    },
    "format": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFormatComponent",
          "selector": "sky-format",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "An array of `TemplateRef` objects to be placed in the template, where the `nth` item is placed at the `{n}` location in the template.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "args",
              "type": "TemplateRef<any>[]",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The tokenized string that represents the template. Tokens use the `{n}` notation where `n` is the ordinal of the item to replace the token.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "text",
              "type": "string",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "inline-delete": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyInlineDeleteComponent",
          "selector": "sky-inline-delete",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the deletion is pending.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "pending",
              "type": "boolean",
              "isRequired": false
            }
          ],
          "outputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Fires when users click the cancel button.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "cancelTriggered",
              "type": "EventEmitter<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Fires when users click the delete button.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "deleteTriggered",
              "type": "EventEmitter<void>"
            }
          ]
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "page": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-page-layout-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "Use `SkyPageLayoutType` in `@skyux/pages` instead.",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyPageLayoutType",
          "type": "'auto' | 'fit'"
        }
      ],
      "variables": []
    },
    "page-summary": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies a title to identify the page content.",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyPageSummaryTitleComponent",
          "selector": "sky-page-summary-title",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "text-expand": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTextExpandComponent",
          "selector": "sky-text-expand",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The title to display when the component expands the full text in a modal.",
              "defaultValue": "\"Expanded view\"",
              "isDeprecated": false,
              "isPreview": false,
              "name": "expandModalTitle",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to replace newline characters in truncated text with spaces.",
              "defaultValue": "true",
              "isDeprecated": false,
              "isPreview": false,
              "name": "truncateNewlines",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The maximum number of text characters to display inline when users select the link to expand the full text. If the text exceeds this limit, then the component expands the full text in a modal instead.",
              "defaultValue": "600",
              "isDeprecated": false,
              "isPreview": false,
              "name": "maxExpandedLength",
              "type": "number",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The maximum number of newline characters to display inline when users select the link to expand the full text. If the text exceeds this limit, then the component expands the full text in a modal view instead.",
              "defaultValue": "2",
              "isDeprecated": false,
              "isPreview": false,
              "name": "maxExpandedNewlines",
              "type": "number",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The number of text characters to display before truncating the text. To avoid truncating text in the middle of a word, the component looks for a space in the 10 characters before the last character.",
              "defaultValue": "200",
              "isDeprecated": false,
              "isPreview": false,
              "name": "maxLength",
              "type": "number",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The text to truncate.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "text",
              "type": "string",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "text-expand-repeater": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-text-expand-repeater-list-style-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTextExpandRepeaterListStyleType",
          "type": "'unordered' | 'ordered' | 'unstyled'"
        }
      ],
      "variables": []
    },
    "toolbar": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Adds a section on the right side of the toolbar for items that substantially alter the view of the content container. This includes simple filters and view switchers.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyToolbarViewActionsComponent",
          "selector": "sky-toolbar-view-actions",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/layout/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-row-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of `SkyRowHarness` instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyRowHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/list-builder": {
    "list": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-list-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "List builder and its features are deprecated. Use data manager instead. For more information, see https://developer.blackbaud.com/skyux/components/data-manager.",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "methods": [],
          "name": "SkyListModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "list-data-provider-in-memory": {
      "classes": [
        {
          "anchorId": "class-sky-list-in-memory-data-provider",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "count",
              "parameters": [],
              "returnType": "Observable<number>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "get",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "request",
                  "type": "ListDataRequestModel"
                }
              ],
              "returnType": "Observable<ListDataResponseModel>"
            }
          ],
          "name": "SkyListInMemoryDataProvider",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "data",
              "type": "Observable<any[]>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "items",
              "type": "BehaviorSubject<ListItemModel[]>"
            }
          ]
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "list-filters": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Creates an inline filter area for the list. Place each filter in a `sky-list-filter-inline-item` component.",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyListFilterInlineComponent",
          "selector": "sky-list-filter-inline",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "list-paging": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Displays a pagination control for a SKY UX-themed list of data.",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyListPagingComponent",
          "selector": "sky-list-paging",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The maximum pages to display.",
              "defaultValue": "5",
              "isDeprecated": false,
              "isPreview": false,
              "name": "maxPages",
              "type": "number | Observable<number>",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The current page number.",
              "defaultValue": "1",
              "isDeprecated": false,
              "isPreview": false,
              "name": "pageNumber",
              "type": "number | Observable<number>",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The number of list items per page.",
              "defaultValue": "10",
              "isDeprecated": false,
              "isPreview": false,
              "name": "pageSize",
              "type": "number | Observable<number>",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "list-toolbar": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Adds a sort dropdown to the list toolbar.",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyListToolbarSortComponent",
          "selector": "sky-list-toolbar-sort",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to sort data in descending order.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "descending",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The data field to sort the list on.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "field",
              "type": "string",
              "isRequired": true
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The label for a sort option.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "label",
              "type": "string",
              "isRequired": true
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The data type of the data field to sort the list on.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "type",
              "type": "string",
              "isRequired": true
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/list-builder-common": {
    "root": {
      "classes": [
        {
          "anchorId": "class-list-sort-field-selector-model",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "methods": [],
          "name": "ListSortFieldSelectorModel",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to sort in descending order.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "descending",
              "type": "boolean"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The fields to sort.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "fieldSelector",
              "type": "string"
            }
          ]
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/list-builder-view-checklist": {
    "list-view-checklist": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-checklist-state-action",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "name": "ChecklistStateAction",
          "type": "ListViewChecklistItemsLoadAction"
        }
      ],
      "variables": []
    }
  },
  "@skyux/list-builder-view-grids": {
    "column-selector": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-column-selector-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "List builder view grid and its features are deprecated. Use data entry grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-entry-grid.",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "methods": [],
          "name": "SkyColumnSelectorModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "list-column-selector-action": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Provides a column selector modal for a list grid view when placed in a [list toolbar](https://developer.blackbaud.com/skyux/components/list/toolbar).",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyListColumnSelectorActionComponent",
          "selector": "sky-list-column-selector-action",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Enables the column selector in the list toolbar. Set this attribute to the instance of the `sky-grid-view` component using the component's template reference variable.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "gridView",
              "type": "SkyListViewGridComponent",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The `helpKey` string to associate with a help button in the grid header. When users select the button, the `helpOpened` event broadcasts the `helpKey` parameter.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpKey",
              "type": "string",
              "isRequired": false
            }
          ],
          "outputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Fires when users click the help button and broadcasts the `helpKey`.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "helpOpened",
              "type": "EventEmitter<string>"
            }
          ]
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "list-view-grid": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-list-view-grid-row-delete-confirm-args",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkyListViewGridRowDeleteConfirmArgs",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The ID of the row where the Confirm button was clicked to delete the row.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "id",
              "type": "string"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/lists": {
    "filter": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies a wrapper for the filters that were applied.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyFilterSummaryComponent",
          "selector": "sky-filter-summary",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "infinite-scroll": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyInfiniteScrollComponent",
          "selector": "sky-infinite-scroll",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to make the infinite scroll component active when more data is available to load. By default, infinite scroll is inactive and does not call the load function.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "enabled",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether data is loading because of a `scrollEnd` event. Setting the property to `true` disables new `scrollEnd` events from firing until it changes to `false`. If this property is not specified, the infinite scroll component watches the DOM for changes and fires `scrollEnd` events when changes occur on its parent DOM element. Relying on this default behavior could fire an excessive number of `scrollEnd` events if the DOM changes are not related to loading data, so we strongly recommend using this property to explicitly set the infinite scroll's loading state.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "loading",
              "type": "boolean",
              "isRequired": true
            }
          ],
          "outputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Fires when scrolling triggers the need to load more data or when users select the button to load more data. This event only fires when the `enabled` property is set to `true` and data is not already loading.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "scrollEnd",
              "type": "EventEmitter<void>"
            }
          ]
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "paging": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-paging-content-change-args",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Information about the paged content to load.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPagingContentChangeArgs",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The current page number.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "currentPage",
              "type": "number"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "A function to call when loading the paged content completes.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "loadingComplete",
              "type": "() => void"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "repeater": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-repeater-expand-mode-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyRepeaterExpandModeType",
          "type": "'single' | 'multiple' | 'none'"
        }
      ],
      "variables": []
    },
    "sort": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySortComponent",
          "selector": "sky-sort",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The ARIA label for the sort button. This sets the sort button's `aria-label` attribute to provide a text equivalent for screen readers [to support accessibility](https://developer.blackbaud.com/skyux/learn/accessibility). Use a context-sensitive label, such as \"Sort constituents.\" Context is especially important when multiple filter buttons are in close proximity. In toolbars, sort buttons use the `listDescriptor` to provide context, and the ARIA label defaults to \"Sort <listDescriptor>.\" For more information about the `aria-label` attribute, see the [WAI-ARIA definition](https://www.w3.org/TR/wai-aria/#aria-label).",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "ariaLabel",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to display a \"Sort\" label beside the icon on the sort button.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "showButtonText",
              "type": "boolean",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/lists/testing": {
    "root": {
      "classes": [
        {
          "anchorId": "class-sky-repeater-item-harness",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Harness for interacting with a repeater item component in tests.",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Clicks on the repeater item.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "click",
              "parameters": [],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Collapses the repeater item, or does nothing if already collapsed.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "collapse",
              "parameters": [],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Deselects the repeater item.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "deselect",
              "parameters": [],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Expands the repeater item, or does nothing if already expanded.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "expand",
              "parameters": [],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets the text of the repeater item content.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getContentText",
              "parameters": [],
              "returnType": "Promise<string>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets the text of the repeater item title.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "getTitleText",
              "parameters": [],
              "returnType": "Promise<string>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the repeater item is collapsible.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "isCollapsible",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the repeater item is expanded, or throws an error informing of the lack of collapsibility.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "isExpanded",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the repeater item is reorderable.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "isReorderable",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the repeater item is selectable.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "isSelectable",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the repeater item is selected.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "isSelected",
              "parameters": [],
              "returnType": "Promise<boolean>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Selects the repeater item.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "select",
              "parameters": [],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Moves the repeater item to the top of the list",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": false,
              "name": "sendToTop",
              "parameters": [],
              "returnType": "Promise<void>"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Gets a `HarnessPredicate` that can be used to search for a `SkyRepeaterItemHarness` that meets certain criteria.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": true,
              "name": "with",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "filters",
                  "type": "SkyRepeaterItemHarnessFilters"
                }
              ],
              "returnType": "HarnessPredicate<SkyRepeaterItemHarness>"
            }
          ],
          "name": "SkyRepeaterItemHarness",
          "properties": []
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/lookup": {
    "autocomplete": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-autocomplete-search-function-response",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAutocompleteSearchFunctionResponse",
          "type": "any[] | Promise<any[]>"
        }
      ],
      "variables": []
    },
    "country-field": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-country-field-country",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Represents the data for a given country.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyCountryFieldCountry",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The country's international dial code. This property will only be set if the `includePhoneInfo` input is set.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "dialCode",
              "type": "string"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The [International Organization for Standardization Alpha 2](https://www.nationsonline.org/oneworld/country_code_list.htm) country code for the country.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "iso2",
              "type": "string"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The name of the country.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "name",
              "type": "string"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "lookup": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-lookup-select-mode-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyLookupSelectModeType",
          "type": "'single' | 'multiple'"
        }
      ],
      "variables": []
    },
    "search": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-search-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [],
          "name": "SkySearchModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "selection-modal": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-selection-modal-search-result",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The result of searching for items to display in a selection modal.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySelectionModalSearchResult",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Data provided on \"load more\" search result requests. Use this property for information such as a continuation token for paged database queries.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "continuationData",
              "type": "unknown"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Indicates whether there are more results that match the search criteria.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "hasMore",
              "type": "boolean"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "A list of items matching the search criteria. When there are more items that match the search criteria, set the `hasMore` property to `true` more records can be lazy-loaded as the user scrolls through the search results.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "items",
              "type": "unknown[]"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The total number of records that match the search criteria, including items not returned in the current list of items.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "totalCount",
              "type": "number"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/lookup/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-selection-modal-search-result-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of `SkySelectionModalSearchResultHarness` instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySelectionModalSearchResultHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/modals": {
    "confirm": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-confirm-button-style-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyConfirmButtonStyleType",
          "type": "'primary' | 'default' | 'link' | 'danger'"
        }
      ],
      "variables": []
    },
    "modal": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-modal-error",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Contains an object with properties for displaying form-level errors in the modal.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyModalError",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The error message to display.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "message",
              "type": "string"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/modals/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-modal-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of SkyModalHarness instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyModalHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/navbar": {
    "navbar": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Displays a navigation item in the navbar. It can include sub-navigation items in a dropdown menu.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyNavbarItemComponent",
          "selector": "sky-navbar-item",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the navigation item is active.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "active",
              "type": "boolean",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/pages": {
    "action-hub": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-recent-links-input",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Recently accessed links to display in a link list component.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyRecentLinksInput",
          "type": "SkyRecentLink[] | 'loading' | SkyRecentlyAccessedGetLinksArgs | undefined"
        }
      ],
      "variables": []
    },
    "link-list": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A wrapper for each link in a link list.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyLinkListItemComponent",
          "selector": "sky-link-list-item",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "link-list-recently-accessed": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A component that displays a list of recently accessed links, such as within a `<sky-page-links>` component.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyLinkListRecentlyAccessedComponent",
          "selector": "sky-link-list-recently-accessed",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Option to pass links as an array of `SkyRecentLink` objects, a `SkyRecentlyAccessedGetLinksArgs` object for `SkyRecentlyAccessedService`, or `'loading'` to display a loading indicator.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "recentLinks",
              "type": "InputSignal<SkyRecentLinksInput>",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "modal-link-list": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyModalLinkListComponent",
          "selector": "sky-modal-link-list",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "title",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "links",
              "type": "SkyPageModalLinksInput",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "page": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-page-layout-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPageLayoutType",
          "type": "'none' | 'fit' | 'blocks' | 'list' | 'tabs'"
        }
      ],
      "variables": []
    },
    "page-header": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Displays buttons within the page header for page actions and applies spacing between buttons. Appears below the page header details.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPageHeaderActionsComponent",
          "selector": "sky-page-header-actions",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/pages/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-page-header-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of SkyPageHeaderHarness instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPageHeaderHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/phone-field": {
    "phone-field": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-phone-field-number-return-format",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Represents the format for validated phone numbers. `default` returns the national format for the default country, `national` returns the national format for all countries, and `international` returns the international format for all countries.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPhoneFieldNumberReturnFormat",
          "type": "'default' | 'international' | 'national'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/phone-field/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-phone-field-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of SkyPhoneFieldHarness instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPhoneFieldHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/popovers": {
    "dropdown": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-dropdown-trigger-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "How users interact with the dropdown button to expose the dropdown menu.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyDropdownTriggerType",
          "type": "'click' | 'hover'"
        }
      ],
      "variables": []
    },
    "popover": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-popover-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The style type of the popover.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPopoverType",
          "type": "'danger' | 'info'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/popovers/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-popover-harness-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of SkyPopoverHarness instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyPopoverHarnessFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/progress-indicator": {
    "progress-indicator": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-progress-indicator-nav-button-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "The nav button type.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyProgressIndicatorNavButtonType",
          "type": "'finish' | 'next' | 'previous' | 'reset'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/progress-indicator/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-progress-indicator-item-filters",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A set of criteria that can be used to filter a list of `SkyProgressIndicatorItemHarness` instances.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyProgressIndicatorItemFilters",
          "properties": []
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/router": {
    "href": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-href-query-params",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A collection of query URL parameters.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyHrefQueryParams",
          "type": "Record<string, string | undefined>"
        }
      ],
      "variables": []
    },
    "link": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-app-link-query-params",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyAppLinkQueryParams",
          "type": "Record<string, any>"
        }
      ],
      "variables": []
    },
    "recently-accessed": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-recently-accessed-link-list",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "A resolved list of recently accessed links.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyRecentlyAccessedLinkList",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "An array of recently accessed links.",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "links",
              "type": "SkyRecentlyAccessedLink[]"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/router/testing": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [
        {
          "anchorId": "class-sky-href-testing-module",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Testing module for the `SkyHref` directive and route resolver.",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": true,
              "name": "with",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "options",
                  "type": "{ userHasAccess: boolean; }"
                }
              ],
              "returnType": "ModuleWithProviders<SkyHrefTestingModule>"
            }
          ],
          "name": "SkyHrefTestingModule",
          "properties": []
        }
      ],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/select-field": {
    "select-field": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-select-field-select-mode",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "`SkySelectFieldComponent` is deprecated. Use `SkyLookupComponent` instead.",
          "description": "",
          "isDeprecated": true,
          "isPreview": false,
          "name": "SkySelectFieldSelectMode",
          "type": "'single' | 'multiple'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/split-view": {
    "split-view": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-split-view-dock-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySplitViewDockType",
          "type": "'none' | 'fill'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/tabs": {
    "sectioned-form": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-sectioned-form-message",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkySectionedFormMessage",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "type",
              "type": "SkySectionedFormMessageType"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "tabs": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-tabset-style",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTabsetStyle",
          "type": "'tabs' | 'wizard'"
        }
      ],
      "variables": []
    },
    "vertical-tabset": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyVerticalTabsetGroupComponent",
          "selector": "sky-vertical-tabset-group",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The header for the collapsible group of tabs.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "groupHeading",
              "type": "string",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to disable the ability to expand and collapse the group.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "disabled",
              "type": "boolean",
              "isRequired": false
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether the collapsible group is expanded.",
              "defaultValue": "false",
              "isDeprecated": false,
              "isPreview": false,
              "name": "open",
              "type": "boolean",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/text-editor": {
    "rich-text-display": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyRichTextDisplayComponent",
          "selector": "sky-rich-text-display",
          "inputs": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The rich text to display.",
              "defaultValue": "",
              "isDeprecated": false,
              "isPreview": false,
              "name": "richText",
              "type": "unknown",
              "isRequired": false
            }
          ],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "text-editor": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [
        {
          "anchorId": "type-alias-sky-text-editor-toolbar-action-type",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTextEditorToolbarActionType",
          "type": "'font-family' | 'font-size' | 'font-style' | 'color' | 'list' | 'alignment' | 'indentation' | 'undo-redo' | 'link'"
        }
      ],
      "variables": []
    }
  },
  "@skyux/theme": {
    "root": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [
        {
          "anchorId": "function-provide-initial-theme",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "name": "provideInitialTheme",
          "parameters": [
            {
              "defaultValue": "'default'",
              "description": "",
              "isOptional": false,
              "name": "name",
              "type": "'default' | 'modern'"
            },
            {
              "defaultValue": "",
              "description": "",
              "isOptional": true,
              "name": "options",
              "type": "{ mode?: 'light' | 'dark'; spacing?: 'standard' | 'compact'; }"
            }
          ],
          "returnType": "EnvironmentProviders"
        }
      ],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/tiles": {
    "tiles": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-tile-dashboard-message",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies the messages to be sent to the tile dashboard component.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyTileDashboardMessage",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The type of message to send.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "type",
              "type": "SkyTileDashboardMessageType"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/toast": {
    "toast": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-toast-config",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies the configuration options to set up a toast.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyToastConfig",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Whether to automatically close the toast. Only close toasts automatically if users can access the messages after the toasts close.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "autoClose",
              "type": "boolean"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The `SkyToastType` type that determines the color and icon for the toast. This property defaults to `SkyToastType.Info`.",
              "isDeprecated": false,
              "isOptional": true,
              "isPreview": false,
              "name": "type",
              "type": "SkyToastType"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  },
  "@skyux/validation": {
    "email-validation": {
      "classes": [],
      "components": [],
      "directives": [
        {
          "anchorId": "",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Adds email address validation to an input element. The directive uses `NgModel` to bind data.",
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyEmailValidationDirective",
          "selector": "[skyEmailValidation]",
          "inputs": [],
          "outputs": []
        }
      ],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "url-validation": {
      "classes": [],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [
        {
          "anchorId": "interface-sky-url-validation-options",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "Specifies options for the URL validator component.",
          "indexSignatures": [],
          "isDeprecated": false,
          "isPreview": false,
          "name": "SkyUrlValidationOptions",
          "properties": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "The ruleset for URL validation. Ruleset 1 uses a regular expression, and ruleset 2 uses the third-party [validator.js library](https://github.com/validatorjs/validator.js).",
              "isDeprecated": false,
              "isOptional": false,
              "isPreview": false,
              "name": "rulesetVersion",
              "type": "1 | 2"
            }
          ]
        }
      ],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "validation": {
      "classes": [
        {
          "anchorId": "class-sky-validation",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": true,
              "name": "isEmail",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "emailAddress",
                  "type": "string"
                }
              ],
              "returnType": "boolean"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": true,
              "name": "isUrl",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "value",
                  "type": "unknown"
                },
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": true,
                  "name": "options",
                  "type": "SkyUrlValidationOptions"
                }
              ],
              "returnType": "boolean"
            }
          ],
          "name": "SkyValidation",
          "properties": []
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    },
    "validators": {
      "classes": [
        {
          "anchorId": "class-sky-validators",
          "codeExample": "",
          "codeExampleLanguage": "markup",
          "deprecationReason": "",
          "description": "",
          "isDeprecated": false,
          "isPreview": false,
          "methods": [
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Validates email addresses in reactive forms. Add this validator directly to the form control model in the component class. If users enter values that are not valid email addresses, the validator throws an error. Since this is a sync validator, it returns a set of validation errors or `null` immediately when users enter values.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": true,
              "name": "email",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "control",
                  "type": "AbstractControl<any, any>"
                }
              ],
              "returnType": "ValidationErrors"
            },
            {
              "codeExample": "",
              "codeExampleLanguage": "markup",
              "deprecationReason": "",
              "description": "Validates URLs in reactive forms. Add this validator directly to the form control model in the component class. If users enter values that are not valid URLs, the validator throws an error. Since this is a sync validator, it returns a set of validation errors or `null` immediately when users enter values.",
              "isDeprecated": false,
              "isPreview": false,
              "isStatic": true,
              "name": "url",
              "parameters": [
                {
                  "defaultValue": "",
                  "description": "",
                  "isOptional": false,
                  "name": "abstractControl",
                  "type": "AbstractControl<any, any>"
                }
              ],
              "returnType": "ValidationErrors"
            }
          ],
          "name": "SkyValidators",
          "properties": []
        }
      ],
      "components": [],
      "directives": [],
      "enumerations": [],
      "functions": [],
      "interfaces": [],
      "modules": [],
      "pipes": [],
      "services": [],
      "typeAliases": [],
      "variables": []
    }
  }
}